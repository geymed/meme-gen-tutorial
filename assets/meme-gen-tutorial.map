{"version":3,"sources":["meme-gen-tutorial/adapters/application.js","meme-gen-tutorial/app.js","meme-gen-tutorial/components/code-snippet.js","meme-gen-tutorial/components/element-highlighter.js","meme-gen-tutorial/components/meme-item.js","meme-gen-tutorial/components/meme-list-item.js","meme-gen-tutorial/components/text-editor.js","meme-gen-tutorial/components/user-filter-toggler.js","meme-gen-tutorial/controllers/meme/edit.js","meme-gen-tutorial/controllers/memes/create.js","meme-gen-tutorial/controllers/memes/index.js","meme-gen-tutorial/controllers/spec.js","meme-gen-tutorial/controllers/spec/create-route.js","meme-gen-tutorial/controllers/spec/edit-route.js","meme-gen-tutorial/controllers/spec/meme-item.js","meme-gen-tutorial/controllers/spec/meme-list-item.js","meme-gen-tutorial/controllers/spec/memes-route.js","meme-gen-tutorial/controllers/spec/user-filter-toggler.js","meme-gen-tutorial/initializers/current-user.js","meme-gen-tutorial/initializers/export-application-global.js","meme-gen-tutorial/initializers/meme-route-fixer.js","meme-gen-tutorial/mixins/spec-controller.js","meme-gen-tutorial/models/meme.js","meme-gen-tutorial/models/user.js","meme-gen-tutorial/router.js","meme-gen-tutorial/routes/index.js","meme-gen-tutorial/routes/meme/edit.js","meme-gen-tutorial/routes/memes.js","meme-gen-tutorial/routes/memes/create.js","meme-gen-tutorial/routes/memes/index.js","meme-gen-tutorial/routes/spec.js","meme-gen-tutorial/routes/spec/create-route.js","meme-gen-tutorial/routes/spec/edit-route.js","meme-gen-tutorial/routes/spec/index.js","meme-gen-tutorial/routes/spec/meme-item.js","meme-gen-tutorial/routes/spec/meme-list-item.js","meme-gen-tutorial/routes/spec/memes-route.js","meme-gen-tutorial/routes/spec/user-filter-toggler.js","meme-gen-tutorial/serializers/application.js","meme-gen-tutorial/snippets.js","meme-gen-tutorial/templates/application.js","meme-gen-tutorial/templates/components/code-snippet.js","meme-gen-tutorial/templates/components/element-highlighter.js","meme-gen-tutorial/templates/components/meme-item.js","meme-gen-tutorial/templates/components/meme-list-item.js","meme-gen-tutorial/templates/components/text-editor.js","meme-gen-tutorial/templates/components/user-filter-toggler.js","meme-gen-tutorial/templates/frames/_create.js","meme-gen-tutorial/templates/frames/_edit.js","meme-gen-tutorial/templates/frames/_meme-item-editable.js","meme-gen-tutorial/templates/frames/_meme-item.js","meme-gen-tutorial/templates/frames/_meme-list-item-liked.js","meme-gen-tutorial/templates/frames/_meme-list-item-of-another.js","meme-gen-tutorial/templates/frames/_meme-list-item.js","meme-gen-tutorial/templates/frames/_memes.js","meme-gen-tutorial/templates/frames/_user-filter-toggler-selected.js","meme-gen-tutorial/templates/frames/_user-filter-toggler.js","meme-gen-tutorial/templates/index.js","meme-gen-tutorial/templates/meme-list-item.js","meme-gen-tutorial/templates/meme-with-controls.js","meme-gen-tutorial/templates/meme.js","meme-gen-tutorial/templates/meme/error.js","meme-gen-tutorial/templates/meme/index.js","meme-gen-tutorial/templates/memes.js","meme-gen-tutorial/templates/memes/index.js","meme-gen-tutorial/templates/spec.js","meme-gen-tutorial/templates/spec/create-route.js","meme-gen-tutorial/templates/spec/edit-route.js","meme-gen-tutorial/templates/spec/index.js","meme-gen-tutorial/templates/spec/meme-item.js","meme-gen-tutorial/templates/spec/meme-list-item.js","meme-gen-tutorial/templates/spec/memes-route.js","meme-gen-tutorial/templates/spec/user-filter-toggler.js","meme-gen-tutorial/templates/users-filter.js","meme-gen-tutorial/tests/adapters/application.jshint.js","meme-gen-tutorial/tests/app.jshint.js","meme-gen-tutorial/tests/components/element-highlighter.jshint.js","meme-gen-tutorial/tests/components/meme-item.jshint.js","meme-gen-tutorial/tests/components/meme-list-item.jshint.js","meme-gen-tutorial/tests/components/user-filter-toggler.jshint.js","meme-gen-tutorial/tests/controllers/meme/edit.jshint.js","meme-gen-tutorial/tests/controllers/memes/create.jshint.js","meme-gen-tutorial/tests/controllers/memes/index.jshint.js","meme-gen-tutorial/tests/controllers/spec.jshint.js","meme-gen-tutorial/tests/controllers/spec/create-route.jshint.js","meme-gen-tutorial/tests/controllers/spec/edit-route.jshint.js","meme-gen-tutorial/tests/controllers/spec/meme-item.jshint.js","meme-gen-tutorial/tests/controllers/spec/meme-list-item.jshint.js","meme-gen-tutorial/tests/controllers/spec/memes-route.jshint.js","meme-gen-tutorial/tests/controllers/spec/user-filter-toggler.jshint.js","meme-gen-tutorial/tests/helpers/resolver.js","meme-gen-tutorial/tests/helpers/start-app.js","meme-gen-tutorial/tests/initializers/current-user.jshint.js","meme-gen-tutorial/tests/initializers/meme-route-fixer.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/helpers/resolver.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/helpers/start-app.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/test-helper.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/adapters/application-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/components/element-highlighter-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/components/meme-item-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/components/meme-list-item-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/components/user-filter-toggler-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/meme/edit-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/memes/create-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/memes/index-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec/create-route-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec/edit-route-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec/meme-item-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec/meme-list-item-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec/memes-route-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec/user-filter-toggler-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/initializers/current-user-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/initializers/meme-route-fixer-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/mixins/spec-controller-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/models/meme-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/models/user-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/index-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/meme/edit-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/memes-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/memes/create-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/memes/index-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/create-route-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/edit-route-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/index-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/meme-item-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/meme-list-item-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/memes-route-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/user-filter-toggler-test.jshint.js","meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/serializers/application-test.jshint.js","meme-gen-tutorial/tests/mixins/spec-controller.jshint.js","meme-gen-tutorial/tests/models/meme.jshint.js","meme-gen-tutorial/tests/models/user.jshint.js","meme-gen-tutorial/tests/router.jshint.js","meme-gen-tutorial/tests/routes/index.jshint.js","meme-gen-tutorial/tests/routes/meme/edit.jshint.js","meme-gen-tutorial/tests/routes/memes.jshint.js","meme-gen-tutorial/tests/routes/memes/create.jshint.js","meme-gen-tutorial/tests/routes/memes/index.jshint.js","meme-gen-tutorial/tests/routes/spec.jshint.js","meme-gen-tutorial/tests/routes/spec/create-route.jshint.js","meme-gen-tutorial/tests/routes/spec/edit-route.jshint.js","meme-gen-tutorial/tests/routes/spec/index.jshint.js","meme-gen-tutorial/tests/routes/spec/meme-item.jshint.js","meme-gen-tutorial/tests/routes/spec/meme-list-item.jshint.js","meme-gen-tutorial/tests/routes/spec/memes-route.jshint.js","meme-gen-tutorial/tests/routes/spec/user-filter-toggler.jshint.js","meme-gen-tutorial/tests/serializers/application.jshint.js","meme-gen-tutorial/tests/test-helper.js","meme-gen-tutorial/tests/unit/adapters/application-test.js","meme-gen-tutorial/tests/unit/components/element-highlighter-test.js","meme-gen-tutorial/tests/unit/components/meme-item-test.js","meme-gen-tutorial/tests/unit/components/meme-list-item-test.js","meme-gen-tutorial/tests/unit/components/user-filter-toggler-test.js","meme-gen-tutorial/tests/unit/controllers/meme/edit-test.js","meme-gen-tutorial/tests/unit/controllers/memes/create-test.js","meme-gen-tutorial/tests/unit/controllers/memes/index-test.js","meme-gen-tutorial/tests/unit/controllers/spec-test.js","meme-gen-tutorial/tests/unit/controllers/spec/create-route-test.js","meme-gen-tutorial/tests/unit/controllers/spec/edit-route-test.js","meme-gen-tutorial/tests/unit/controllers/spec/meme-item-test.js","meme-gen-tutorial/tests/unit/controllers/spec/meme-list-item-test.js","meme-gen-tutorial/tests/unit/controllers/spec/memes-route-test.js","meme-gen-tutorial/tests/unit/controllers/spec/user-filter-toggler-test.js","meme-gen-tutorial/tests/unit/initializers/current-user-test.js","meme-gen-tutorial/tests/unit/initializers/meme-route-fixer-test.js","meme-gen-tutorial/tests/unit/mixins/spec-controller-test.js","meme-gen-tutorial/tests/unit/models/meme-test.js","meme-gen-tutorial/tests/unit/models/user-test.js","meme-gen-tutorial/tests/unit/routes/index-test.js","meme-gen-tutorial/tests/unit/routes/meme/edit-test.js","meme-gen-tutorial/tests/unit/routes/memes-test.js","meme-gen-tutorial/tests/unit/routes/memes/create-test.js","meme-gen-tutorial/tests/unit/routes/memes/index-test.js","meme-gen-tutorial/tests/unit/routes/spec-test.js","meme-gen-tutorial/tests/unit/routes/spec/create-route-test.js","meme-gen-tutorial/tests/unit/routes/spec/edit-route-test.js","meme-gen-tutorial/tests/unit/routes/spec/index-test.js","meme-gen-tutorial/tests/unit/routes/spec/meme-item-test.js","meme-gen-tutorial/tests/unit/routes/spec/meme-list-item-test.js","meme-gen-tutorial/tests/unit/routes/spec/memes-route-test.js","meme-gen-tutorial/tests/unit/routes/spec/user-filter-toggler-test.js","meme-gen-tutorial/tests/unit/serializers/application-test.js","vendor/ember-cli/app-suffix.js"],"sourcesContent":["define('meme-gen-tutorial/adapters/application', ['exports', 'ember-data', 'meme-gen-tutorial/config/environment'], function (exports, DS, env) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].FirebaseAdapter.extend({\n    firebase: new Firebase(env['default'].firebase)\n  });\n\n});","define('meme-gen-tutorial/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'meme-gen-tutorial/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('meme-gen-tutorial/components/code-snippet', ['exports', 'ember', 'meme-gen-tutorial/snippets'], function (exports, Ember, Snippets) {\n\n  'use strict';\n\n  var Highlight = require(\"highlight.js\");\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: \"pre\",\n    classNameBindings: [\"language\"],\n    unindent: true,\n\n    _unindent: function (src) {\n      if (!this.get(\"unindent\")) {\n        return src;\n      }\n      var match,\n          min,\n          lines = src.split(\"\\n\");\n      for (var i = 0; i < lines.length; i++) {\n        match = /^\\s*/.exec(lines[i]);\n        if (match && (typeof min === \"undefined\" || min > match[0].length)) {\n          min = match[0].length;\n        }\n      }\n      if (typeof min !== \"undefined\" && min > 0) {\n        src = src.replace(new RegExp(\"(\\\\n|^)\\\\s{\" + min + \"}\", \"g\"), \"$1\");\n      }\n      return src;\n    },\n\n    source: (function () {\n      return this._unindent((Snippets['default'][this.get(\"name\")] || \"\").replace(/^(\\s*\\n)*/, \"\").replace(/\\s*$/, \"\"));\n    }).property(\"name\"),\n\n    didInsertElement: function () {\n      Highlight.highlightBlock(this.get(\"element\"));\n    },\n\n    language: (function () {\n      var m = /\\.(\\w+)$/i.exec(this.get(\"name\"));\n      if (m) {\n        switch (m[1].toLowerCase()) {\n          case \"js\":\n            return \"javascript\";\n          case \"hbs\":\n            return \"handlebars\";\n        }\n      }\n    }).property(\"name\")\n  });\n\n});","define('meme-gen-tutorial/components/element-highlighter', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var $ = Ember['default'].$;\n  exports['default'] = Ember['default'].Component.extend({\n    data: Ember['default'].A([]),\n    gotoRoute: \"gotoRoute\",\n    bindHoverEvents: (function () {\n      var self = this;\n      Ember['default'].run.scheduleOnce(\"afterRender\", this, function () {\n        Ember['default'].run.next(this, function () {\n          this.$().on(\"mouseover\", \".hljs-tag, .hljs-comment\", function (event) {\n            var $tag = $(event.currentTarget),\n                elementSelector = self.get(\"data\")[$tag.index()],\n                elementToHightlight;\n            if (elementSelector) {\n              elementToHightlight = self.$(self.get(\"data\")[$tag.index()]);\n              elementToHightlight.addClass(\"hover-highlight\");\n              $tag.one(\"mouseleave\", function () {\n                elementToHightlight.removeClass(\"hover-highlight\");\n              });\n            }\n          });\n          this.$().on(\"click\", \".hljs-comment, .hljs-value\", function (event) {\n            var $comment = $(event.currentTarget),\n                text = $comment.text().trim();\n            if (/meme-item/.test(text)) {\n              self.sendAction(\"gotoRoute\", \"spec.meme-item\");\n              return;\n            }\n            if (/meme-list-item/.test(text)) {\n              self.sendAction(\"gotoRoute\", \"spec.meme-list-item\");\n              return;\n            }\n            if (/user-filter-toggler/.test(text)) {\n              self.sendAction(\"gotoRoute\", \"spec.user-filter-toggler\");\n              return;\n            }\n            if (/link-to:\\/memes\\/create/.test(text)) {\n              self.sendAction(\"gotoRoute\", \"spec.create-route\");\n              return;\n            }\n            if (/link-to:\\/memes\\/(.*)\\/edit/.test(text)) {\n              self.sendAction(\"gotoRoute\", \"spec.edit-route\");\n              return;\n            }\n            if (/link-to:\\/memes/.test(text)) {\n              self.sendAction(\"gotoRoute\", \"spec.memes-route\");\n              return;\n            }\n          });\n        });\n      });\n    }).on(\"didInsertElement\")\n  });\n\n});","define('meme-gen-tutorial/components/meme-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    content: null,\n    classNameBindings: [\"editable\", \"notEditable\"],\n    classNames: [\"meme-item\"],\n    attributeBindings: [\"style\"],\n    editable: false,\n    notEditable: Ember['default'].computed.not(\"editable\"),\n    style: Ember['default'].computed.oneWay(\"backgroundImageStyle\"),\n    backgroundImageStyle: (function () {\n      return \"background-image: url(\" + this.get(\"content.imgSrc\") + \")\";\n    }).property(\"content.imgSrc\"),\n    openerStyle: (function () {\n      return \"font-size: \" + this.get(\"content.openerFontSize\") + \"px\";\n    }).property(\"content.openerFontSize\"),\n    closerStyle: (function () {\n      return \"font-size: \" + this.get(\"content.closerFontSize\") + \"px\";\n    }).property(\"content.closerFontSize\") });\n\n});","define('meme-gen-tutorial/components/meme-list-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    classNames: [\"meme-list-item\", \"panel\", \"panel-default\"],\n    actions: {\n      deleteMeme: function (meme) {\n        this.sendAction(\"deleteMeme\", meme);\n      },\n      toggleLike: function (meme) {\n        this.sendAction(\"toggleLike\", meme);\n      }\n    }\n  });\n\n});","define('meme-gen-tutorial/components/text-editor', ['exports', 'text-editor/components/text-editor'], function (exports, TextEditor) {\n\n\t'use strict';\n\n\texports['default'] = TextEditor['default'];\n\n});","define('meme-gen-tutorial/components/user-filter-toggler', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: \"span\",\n    classNames: [\"label\"],\n    classNameBindings: [\"selected:label-success\", \"notSelected:label-primary\"],\n    selected: false,\n    notSelected: Ember['default'].computed.not(\"selected\"),\n    click: function () {\n      this.toggleProperty(\"selected\");\n      this.sendAction(\"toggleUser\", this.get(\"content.id\"), this.get(\"selected\"));\n    }\n  });\n\n});","define('meme-gen-tutorial/controllers/meme/edit', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    title: \"Edit Meme\",\n    actionName: \"Save\"\n  });\n\n});","define('meme-gen-tutorial/controllers/memes/create', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    title: \"Create Meme\",\n    actionName: \"Create\"\n  });\n\n});","define('meme-gen-tutorial/controllers/memes/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var escape = window.escape;\n  exports['default'] = Ember['default'].Controller.extend({\n    queryParams: [\"filterByUsers\"],\n    searchTerm: \"\",\n    filterByUsers: Ember['default'].A([]),\n    actions: {\n      toggleUser: function (userId, isSelected) {\n        var filterByUsers = this.get(\"filterByUsers\");\n        if (isSelected) {\n          filterByUsers.addObject(userId);\n        } else {\n          filterByUsers.removeObject(userId);\n        }\n      },\n      toggleLike: function (meme) {\n        if (meme.get(\"likedByMe\")) {\n          meme.get(\"likedBy\").removeObject(this.whoami);\n        } else {\n          meme.get(\"likedBy\").addObject(this.whoami);\n        }\n        return meme.save();\n      }\n    },\n    usersToFilterBy: (function () {\n      return this.get(\"model.users\").map(function (user) {\n        return Ember['default'].Object.extend({\n          name: user.get(\"name\"),\n          id: user.get(\"id\"),\n          selected: this.get(\"filterByUsers\").contains(user.get(\"id\"))\n        }).create();\n      }, this);\n    }).property(\"filterByUsers\"),\n    filteredMemes: (function () {\n      var filterByUsers = this.get(\"filterByUsers\"),\n          searchTermRegExp = new RegExp(escape(this.get(\"searchTerm\")).toLowerCase());\n      return this.store.filter(\"meme\", function (meme) {\n        return (filterByUsers.length === 0 || filterByUsers.contains(meme.get(\"user.id\"))) && (searchTermRegExp.test(meme.get(\"opener\").toLowerCase()) || searchTermRegExp.test(meme.get(\"closer\").toLowerCase()));\n      });\n    }).property(\"filterByUsers.@each\", \"searchTerm\", \"model.memes\")\n  });\n\n});","define('meme-gen-tutorial/controllers/spec', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    highlightData: Ember['default'].Object.create({\n      memes: Ember['default'].A([\".frame .memes-container\", \".frame .memes-container .memes-filters\", \".frame .memes-container .memes-filters .form-group:nth-child(1)\", \".frame .memes-container .memes-filters .form-group:nth-child(1) a\", \".frame .memes-container .memes-filters .form-group:nth-child(1) a button\", \".frame .memes-container .memes-filters .form-group:nth-child(1) a button span\", \".frame .memes-container .memes-filters .form-group:nth-child(1) a button span\", \".frame .memes-container .memes-filters .form-group:nth-child(1) a button\", \".frame .memes-container .memes-filters .form-group:nth-child(1) a\", \".frame .memes-container .memes-filters .form-group:nth-child(1)\", \".frame .memes-container .memes-filters .form-group:nth-child(2)\", \".frame .memes-container .memes-filters .form-group:nth-child(2) input\", \".frame .memes-container .memes-filters .form-group:nth-child(2)\", \".frame .memes-container .memes-filters .users\", \".frame .memes-container .memes-filters .users .panel.panel-default\", \".frame .memes-container .memes-filters .users .panel .panel-heading\", \".frame .memes-container .memes-filters .users .panel .panel-heading\", \".frame .memes-container .memes-filters .users .panel .panel-body\", \".frame .memes-container .memes-filters .users .panel .panel-body\", \".frame .memes-container .memes-filters .users .panel .panel-body\", \".frame .memes-container .memes-filters .users .panel.panel-default\", \".frame .memes-container .memes-filters .users\", \".frame .memes-container .memes-filters\", \".frame .memes-container .memes-list\", \".frame .memes-container .memes-list\", \".frame .memes-container .memes-list\", \".frame .memes-container\"]),\n      userFilterToggler: Ember['default'].A([\".frame .label\", \".frame .label\"])\n    })\n  });\n\n});","define('meme-gen-tutorial/controllers/spec/create-route', ['exports', 'ember', 'meme-gen-tutorial/mixins/spec-controller'], function (exports, Ember, SpecControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(SpecControllerMixin['default'], {\n    highlightData: Ember['default'].Object.create({\n      create: Ember['default'].A([\".frame > .panel\", \".frame > .panel > .panel-heading\", \".frame > .panel > .panel-heading span\", \".frame > .panel > .panel-heading span\", \".frame > .panel > .panel-heading\", \".frame > .panel > .panel-body\", \".frame > .panel > .panel-body > .panel\", \".frame > .panel > .panel-body > .panel > .panel-body\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(1)\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(1) label\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(1) label\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(1) input\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(1)\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(2)\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(2) label\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(2) label\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(2) input\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(2)\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(3)\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(3) label\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(3) label\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(3) input\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(3)\", \".frame > .panel > .panel-body > .panel > .panel-body\", \".frame > .panel > .panel-body > .panel\", \".frame > .panel > .panel-body > .meme-item\", \".frame > .panel > .panel-body\", \".frame > .panel > .panel-footer\", \".frame > .panel > .panel-footer > button\", \".frame > .panel > .panel-footer > button\", \".frame > .panel > .panel-footer > button\", \".frame > .panel > .panel-footer > a\", \".frame > .panel > .panel-footer > a button\", \".frame > .panel > .panel-footer > a button\", \".frame > .panel > .panel-footer > a\", \".frame > .panel > .panel-footer\", \".frame > .panel\"])\n    })\n  });\n\n});","define('meme-gen-tutorial/controllers/spec/edit-route', ['exports', 'ember', 'meme-gen-tutorial/mixins/spec-controller'], function (exports, Ember, SpecControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(SpecControllerMixin['default'], {\n    highlightData: Ember['default'].Object.create({\n      edit: Ember['default'].A([\".frame > .panel\", \".frame > .panel > .panel-heading\", \".frame > .panel > .panel-heading span\", \".frame > .panel > .panel-heading span\", \".frame > .panel > .panel-heading\", \".frame > .panel > .panel-body\", \".frame > .panel > .panel-body > .panel\", \".frame > .panel > .panel-body > .panel > .panel-body\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(1)\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(1) label\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(1) label\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(1) input\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(1)\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(2)\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(2) label\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(2) label\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(2) input\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(2)\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(3)\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(3) label\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(3) label\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(3) input\", \".frame > .panel > .panel-body > .panel > .panel-body > .form-group:nth-child(3)\", \".frame > .panel > .panel-body > .panel > .panel-body\", \".frame > .panel > .panel-body > .panel\", \".frame > .panel > .panel-body > .meme-item\", \".frame > .panel > .panel-body\", \".frame > .panel > .panel-footer\", \".frame > .panel > .panel-footer > button\", \".frame > .panel > .panel-footer > button\", \".frame > .panel > .panel-footer > button\", \".frame > .panel > .panel-footer > a\", \".frame > .panel > .panel-footer > a button\", \".frame > .panel > .panel-footer > a button\", \".frame > .panel > .panel-footer > a\", \".frame > .panel > .panel-footer\", \".frame > .panel\"])\n    })\n  });\n\n});","define('meme-gen-tutorial/controllers/spec/meme-item', ['exports', 'ember', 'meme-gen-tutorial/mixins/spec-controller'], function (exports, Ember, SpecControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(SpecControllerMixin['default'], {\n    highlightData: Ember['default'].Object.create({\n      memeItem: Ember['default'].A([\".frame .meme-item\", \".frame .meme-item .opener\", \".frame .meme-item .opener .TextEditor\", \".frame .meme-item .opener\", \".frame .meme-item .closer\", \".frame .meme-item .closer .TextEditor\", \".frame .meme-item .closer\", \".frame .meme-item\"])\n    })\n  });\n\n});","define('meme-gen-tutorial/controllers/spec/meme-list-item', ['exports', 'ember', 'meme-gen-tutorial/mixins/spec-controller'], function (exports, Ember, SpecControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(SpecControllerMixin['default'], {\n    highlightData: Ember['default'].Object.create({\n      ownedByCurrentUser: Ember['default'].A([\".frame .meme-list-item\", \".frame .meme-list-item .panel-body\", \".frame .meme-list-item .panel-body .meme-item\", \".frame .meme-list-item .panel-body\", \".frame .meme-list-item .panel-footer\", \".frame .meme-list-item .panel-footer > a\", \".frame .meme-list-item .panel-footer > a button\", \".frame .meme-list-item .panel-footer > a button span\", \".frame .meme-list-item .panel-footer > a button span\", \".frame .meme-list-item .panel-footer > a button\", \".frame .meme-list-item .panel-footer > a\", null, \".frame .meme-list-item .panel-footer > button:nth-child(2)\", \".frame .meme-list-item .panel-footer > button:nth-child(2) span\", \".frame .meme-list-item .panel-footer > button:nth-child(2) span\", \".frame .meme-list-item .panel-footer > button:nth-child(2)\", null, \".frame .meme-list-item .panel-footer > button:nth-child(3)\", \".frame .meme-list-item .panel-footer > button:nth-child(3) span:nth-child(1)\", \".frame .meme-list-item .panel-footer > button:nth-child(3) span:nth-child(1)\", \".frame .meme-list-item .panel-footer > button:nth-child(3) span:nth-child(2)\", \".frame .meme-list-item .panel-footer > button:nth-child(3) span:nth-child(2)\", \".frame .meme-list-item .panel-footer > button:nth-child(3)\", \".frame .meme-list-item .panel-footer > .label\", \".frame .meme-list-item .panel-footer > .label\", \".frame .meme-list-item .panel-footer\", \".frame .meme-list-item\"]),\n      ownedByAnother: Ember['default'].A([\".frame .meme-list-item\", \".frame .meme-list-item .panel-body\", \".frame .meme-list-item .panel-body .meme-item\", \".frame .meme-list-item .panel-body\", \".frame .meme-list-item .panel-footer\", null, \".frame .meme-list-item .panel-footer > button\", \".frame .meme-list-item .panel-footer > button span:nth-child(1)\", \".frame .meme-list-item .panel-footer > button span:nth-child(1)\", \".frame .meme-list-item .panel-footer > button span:nth-child(2)\", \".frame .meme-list-item .panel-footer > button span:nth-child(2)\", \".frame .meme-list-item .panel-footer > button\", \".frame .meme-list-item .panel-footer > .label\", \".frame .meme-list-item .panel-footer > .label\", \".frame .meme-list-item .panel-footer\", \".frame .meme-list-item\"])\n    })\n  });\n\n});","define('meme-gen-tutorial/controllers/spec/memes-route', ['exports', 'ember', 'meme-gen-tutorial/mixins/spec-controller'], function (exports, Ember, SpecControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(SpecControllerMixin['default'], {\n    highlightData: Ember['default'].Object.create({\n      memes: Ember['default'].A([\".frame .memes-container\", \".frame .memes-container .memes-filters\", \".frame .memes-container .memes-filters .form-group:nth-child(1)\", \".frame .memes-container .memes-filters .form-group:nth-child(1) a\", \".frame .memes-container .memes-filters .form-group:nth-child(1) a button\", \".frame .memes-container .memes-filters .form-group:nth-child(1) a button span\", \".frame .memes-container .memes-filters .form-group:nth-child(1) a button span\", \".frame .memes-container .memes-filters .form-group:nth-child(1) a button\", \".frame .memes-container .memes-filters .form-group:nth-child(1) a\", \".frame .memes-container .memes-filters .form-group:nth-child(1)\", \".frame .memes-container .memes-filters .form-group:nth-child(2)\", \".frame .memes-container .memes-filters .form-group:nth-child(2) input\", \".frame .memes-container .memes-filters .form-group:nth-child(2)\", \".frame .memes-container .memes-filters .users\", \".frame .memes-container .memes-filters .users .panel.panel-default\", \".frame .memes-container .memes-filters .users .panel .panel-heading\", \".frame .memes-container .memes-filters .users .panel .panel-heading\", \".frame .memes-container .memes-filters .users .panel .panel-body\", \".frame .memes-container .memes-filters .users .panel .panel-body\", \".frame .memes-container .memes-filters .users .panel .panel-body\", \".frame .memes-container .memes-filters .users .panel.panel-default\", \".frame .memes-container .memes-filters .users\", \".frame .memes-container .memes-filters\", \".frame .memes-container .memes-list\", \".frame .memes-container .memes-list\", \".frame .memes-container .memes-list\", \".frame .memes-container\"])\n    })\n  });\n\n});","define('meme-gen-tutorial/controllers/spec/user-filter-toggler', ['exports', 'ember', 'meme-gen-tutorial/mixins/spec-controller'], function (exports, Ember, SpecControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(SpecControllerMixin['default'], {\n    highlightData: Ember['default'].Object.create({\n      userFilterToggler: Ember['default'].A([null, \".frame .label\", \".frame .label\"])\n    })\n  });\n\n});","define('meme-gen-tutorial/initializers/current-user', ['exports', 'ember', 'meme-gen-tutorial/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var store = container.lookup(\"store:main\");\n    application.register(\"user:whoami-proxy\", Ember['default'].Object.create({\n      id: config['default'].whoami,\n      name: config['default'].whoami.capitalize()\n    }), {\n      instantiate: false,\n      singleton: true\n    });\n    application.inject(\"model\", \"whoami\", \"user:whoami-proxy\");\n    try {\n      if (store.modelFor(\"user\")) {\n        application.deferReadiness();\n        store.find(\"user\", config['default'].whoami).then(function (user) {\n          application.register(\"user:whoami\", user, {\n            instantiate: false,\n            singleton: true\n          });\n          application.inject(\"route\", \"whoami\", \"user:whoami\");\n          application.inject(\"controller\", \"whoami\", \"user:whoami\");\n          application.advanceReadiness();\n        });\n      }\n    } catch (e) {\n      application.inject(\"route\", \"whoami\", \"user:whoami-proxy\");\n      application.inject(\"controller\", \"whoami\", \"user:whoami-proxy\");\n    }\n  }\n\n  exports['default'] = {\n    name: \"current-user\",\n    after: \"store\",\n    initialize: initialize\n  };\n\n});","define('meme-gen-tutorial/initializers/export-application-global', ['exports', 'ember', 'meme-gen-tutorial/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal) {\n      window[classifiedName] = application;\n    }\n  };\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('meme-gen-tutorial/initializers/meme-route-fixer', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    var MemeRoute;\n    try {\n      MemeRoute = window.requireModule(\"meme-gen-test/routes/meme\");\n    } catch (e) {}\n\n    if (MemeRoute && MemeRoute[\"default\"]) {\n      MemeRoute = MemeRoute[\"default\"];\n    } else {\n      MemeRoute = Ember['default'].Route.extend();\n      window.define(\"meme-gen-test/routes/meme\", [\"exports\"], function (__exports__) {\n        \"use strict\";\n        __exports__[\"default\"] = MemeRoute;\n      });\n    }\n    MemeRoute.reopen({\n      actions: {\n        error: function (error, transition) {\n          var memeId = Ember['default'].get(transition, \"params.meme.meme_id\"),\n              record;\n          if (memeId) {\n            record = this.store.recordForId(\"meme\", memeId);\n            try {\n              if (record && record.get(\"isEmpty\")) {\n                this.store.unloadRecord(record);\n              }\n            } catch (e) {}\n            return this.replaceWith(\"memes\");\n          }\n        }\n      }\n    });\n  }\n\n  exports['default'] = {\n    name: \"meme-route-fixer\",\n    initialize: initialize\n  };\n  /* container, application */\n\n});","define('meme-gen-tutorial/mixins/spec-controller', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n    actions: {\n      gotoRoute: function (routename) {\n        this.transitionToRoute(routename);\n      }\n    }\n  });\n\n});","define('meme-gen-tutorial/models/meme', ['exports', 'ember-data', 'ember', 'meme-gen-tutorial/config/environment'], function (exports, DS, Ember, env) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    imgSrc: DS['default'].attr(\"string\", {\n      defaultValue: env['default'].defaultMemeImageSrc\n    }),\n    opener: DS['default'].attr(\"string\", {\n      defaultValue: \"Opener\"\n    }),\n    closer: DS['default'].attr(\"string\", {\n      defaultValue: \"Closer\"\n    }),\n    openerFontSize: DS['default'].attr(\"number\", {\n      defaultValue: 60\n    }),\n    closerFontSize: DS['default'].attr(\"number\", {\n      defaultValue: 60\n    }),\n    user: DS['default'].belongsTo(\"user\"),\n    likedBy: DS['default'].hasMany(\"user\"),\n    likes: Ember['default'].computed.oneWay(\"likedBy.length\"),\n    isMine: (function () {\n      return this.get(\"user.id\") === this.get(\"whoami.id\");\n    }).property(\"user.id\", \"whoami.id\"),\n    likedByMe: (function () {\n      return this.get(\"likedBy\").mapBy(\"id\").contains(this.get(\"whoami.id\"));\n    }).property(\"likedBy.@each\")\n  });\n\n});","define('meme-gen-tutorial/models/user', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr(),\n    memes: DS['default'].hasMany(\"meme\", {\n      inverse: \"user\"\n    })\n  });\n\n});","define('meme-gen-tutorial/router', ['exports', 'ember', 'meme-gen-tutorial/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.resource(\"memes\", function () {\n      this.resource(\"meme\", {\n        path: \"/:meme_id\"\n      }, function () {\n        this.route(\"edit\");\n      });\n      this.route(\"create\");\n    });\n    this.route(\"spec\", function () {\n      this.route(\"memes-route\");\n      this.route(\"meme-list-item\");\n      this.route(\"meme-item\");\n      this.route(\"edit-route\");\n      this.route(\"create-route\");\n      this.route(\"user-filter-toggler\");\n    });\n  });\n\n  exports['default'] = Router;\n\n});","define('meme-gen-tutorial/routes/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    redirect: function () {\n      this.transitionTo(\"memes\");\n    }\n  });\n\n});","define('meme-gen-tutorial/routes/meme/edit', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    actions: {\n      willTransition: function () {\n        this.controller.get(\"model\").rollback();\n      }\n    },\n    renderTemplate: function () {\n      this.render(\"meme-with-controls\");\n    }\n  });\n\n});","define('meme-gen-tutorial/routes/memes', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function () {\n      return Ember['default'].RSVP.hash({\n        memes: this.store.find(\"meme\"),\n        users: this.store.find(\"user\")\n      });\n    },\n    actions: {\n      saveMeme: function (meme) {\n        meme.save().then((function () {\n          this.transitionTo(\"memes.index\");\n        }).bind(this));\n      },\n      deleteMeme: function (meme) {\n        return meme.destroyRecord();\n      }\n    }\n  });\n\n});","define('meme-gen-tutorial/routes/memes/create', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function () {\n      return this.store.createRecord(\"meme\", {\n        user: this.get(\"whoami\")\n      });\n    },\n    actions: {\n      willTransition: function () {\n        this.controller.get(\"model\").rollback();\n      }\n    },\n    renderTemplate: function () {\n      this.render(\"meme-with-controls\");\n    }\n  });\n\n});","define('meme-gen-tutorial/routes/memes/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    renderTemplate: function () {\n      this.render();\n      this.render(\"users-filter\", {\n        outlet: \"users-filter\",\n        into: \"memes.index\"\n      });\n    }\n  });\n\n});","define('meme-gen-tutorial/routes/spec', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('meme-gen-tutorial/routes/spec/create-route', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('meme-gen-tutorial/routes/spec/edit-route', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('meme-gen-tutorial/routes/spec/index', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('meme-gen-tutorial/routes/spec/meme-item', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('meme-gen-tutorial/routes/spec/meme-list-item', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('meme-gen-tutorial/routes/spec/memes-route', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('meme-gen-tutorial/routes/spec/user-filter-toggler', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('meme-gen-tutorial/serializers/application', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].FirebaseSerializer.extend({});\n\n});","define('meme-gen-tutorial/snippets', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = { \"create.html\": \"<div class=\\\"panel panel-default meme-panel\\\">\\n\\t<div class=\\\"panel-heading\\\">\\n\\t\\t<span>Create Meme</span>\\n\\t</div>\\n\\t<div class=\\\"panel-body flex\\\">\\n\\t\\t<div class=\\\"panel panel-default meme-controls\\\">\\n\\t\\t\\t<div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Image URL</label>\\n\\t\\t\\t\\t\\t<!-- {{input placeholder=\\\"Image URL\\\" classNames=\\\"form-control\\\" value=model.imgSrc}} -->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Opener Font Size</label>\\n\\t\\t\\t\\t\\t<!-- {{input type=\\\"range\\\" classNames=\\\"form-control\\\" value=model.openerFontSize}} -->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Closer Font Size</label>\\n\\t\\t\\t\\t\\t<!-- {{input type=\\\"range\\\" classNames=\\\"form-control\\\" value=model.closerFontSize}} -->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<!-- {{meme-item editable=true content=model}} -->\\n\\t</div>\\n\\t<div class=\\\"panel-footer align-right\\\">\\n\\t\\t<!-- onclick: save new meme -->\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\">\\n\\t\\t\\tCreate\\n\\t\\t</button>\\n\\t\\t<a class=\\\"ember-view\\\" href=\\\"link-to:/memes\\\">\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\">\\n\\t\\t\\t\\tCancel\\n\\t\\t\\t</button>\\n\\t\\t</a>\\n\\t</div>\\n</div>\",\n    \"edit.html\": \"<div class=\\\"panel panel-default meme-panel\\\">\\n\\t<div class=\\\"panel-heading\\\">\\n\\t\\t<span>Edit Meme</span>\\n\\t</div>\\n\\t<div class=\\\"panel-body flex\\\">\\n\\t\\t<div class=\\\"panel panel-default meme-controls\\\">\\n\\t\\t\\t<div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Image URL</label>\\n\\t\\t\\t\\t\\t<!-- {{input placeholder=\\\"Image URL\\\" classNames=\\\"form-control\\\" value=model.imgSrc}} -->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Opener Font Size</label>\\n\\t\\t\\t\\t\\t<!-- {{input type=\\\"range\\\" classNames=\\\"form-control\\\" value=model.openerFontSize}} -->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Closer Font Size</label>\\n\\t\\t\\t\\t\\t<!-- {{input type=\\\"range\\\" classNames=\\\"form-control\\\" value=model.closerFontSize}} -->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<!-- {{meme-item editable=true content=model}} -->\\n\\t</div>\\n\\t<div class=\\\"panel-footer align-right\\\">\\n\\t\\t<!-- onclick: save meme -->\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\">\\n\\t\\t\\tSave\\n\\t\\t</button>\\n\\t\\t<a class=\\\"ember-view\\\" href=\\\"link-to:/memes\\\">\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\">\\n\\t\\t\\t\\tCancel\\n\\t\\t\\t</button>\\n\\t\\t</a>\\n\\t</div>\\n</div>\",\n    \"meme-item-editable.html\": \"<div class=\\\"meme-item\\\" style=\\\"background-image: url(meme.imgSrc)\\\">\\n\\t<div class=\\\"opener\\\" style=\\\"font-size: {{openerStyle}};\\\">\\n\\t\\t<!-- {{text-editor editable=true text=content.opener}} -->\\n\\t</div>\\n\\t<div class=\\\"closer\\\" style=\\\"font-size: {{closerStyle}};\\\">\\n\\t\\t<!-- {{text-editor editable=true text=content.closer}} -->\\n\\t</div>\\n</div>\",\n    \"meme-item.html\": \"<div class=\\\"meme-item not-editable\\\" style=\\\"background-image: url(meme.imgSrc)\\\">\\n\\t<div class=\\\"opener\\\" style=\\\"font-size: {{openerStyle}};\\\">\\n\\t\\t<!-- {{text-editor editable=false text=content.opener}} -->\\n\\t</div>\\n\\t<div class=\\\"closer\\\" style=\\\"font-size: {{closerStyle}};\\\">\\n\\t\\t<!-- {{text-editor editable=false text=content.closer}} -->\\n\\t</div>\\n</div>\",\n    \"meme-list-item-liked.html\": \"<div class=\\\"meme-list-item panel panel-default\\\">\\n\\t<div class=\\\"panel-body\\\">\\n\\t\\t<!-- {{meme-item content=content editable=false}} -->\\n\\t</div>\\n\\t<div class=\\\"panel-footer\\\">\\n\\t\\t<a href=\\\"link-to:/memes/:meme_id/edit\\\">\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\t</button>\\n\\t\\t</a>\\n\\n\\t\\t<!-- onclick : delete meme -->\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\" >\\n\\t\\t\\t<span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t</button>\\n\\n\\t\\t<!-- onclick : toggle like -->\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn liked\\\" aria-label=\\\"Left Align\\\">\\n\\t\\t\\t<span class=\\\"glyphicon glyphicon-heart\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\t<span class=\\\"badge\\\">\\n\\t\\t\\t\\t{{content.likedBy.length}}\\n\\t\\t\\t</span>\\n\\t\\t</button>\\n\\t\\t<span class=\\\"label label-info\\\">Created by {{content.user.name}}</span>\\n\\t</div>\\n</div>\",\n    \"meme-list-item-of-another.html\": \"<div class=\\\"meme-list-item panel panel-default\\\">\\n\\t<div class=\\\"panel-body\\\">\\n\\t\\t<!-- {{meme-item content=content editable=false}} -->\\n\\t</div>\\n\\t<div class=\\\"panel-footer\\\">\\n\\n\\t\\t<!-- onclick : toggle like -->\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n\\t\\t\\t<span class=\\\"glyphicon glyphicon-heart\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\t<span class=\\\"badge\\\">\\n\\t\\t\\t\\t{{content.likedBy.length}}\\n\\t\\t\\t</span>\\n\\t\\t</button>\\n\\n\\t\\t<span class=\\\"label label-info\\\">Created by {{content.user.name}}</span>\\n\\n\\t</div>\\n</div>\",\n    \"meme-list-item.html\": \"<div class=\\\"meme-list-item panel panel-default\\\">\\n\\t<div class=\\\"panel-body\\\">\\n\\t\\t<!-- {{meme-item content=content editable=false}} -->\\n\\t</div>\\n\\t<div class=\\\"panel-footer\\\">\\n\\n\\t\\t<a href=\\\"link-to:/memes/:meme_id/edit\\\">\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\t</button>\\n\\t\\t</a>\\n\\n\\t\\t<!-- onclick : delete meme -->\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\" >\\n\\t\\t\\t<span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t</button>\\n\\n\\t\\t<!-- onclick : toggle like -->\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n\\t\\t\\t<span class=\\\"glyphicon glyphicon-heart\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\t<span class=\\\"badge\\\">\\n\\t\\t\\t\\t{{content.likedBy.length}}\\n\\t\\t\\t</span>\\n\\t\\t</button>\\n\\n\\t\\t<span class=\\\"label label-info\\\">Created by {{content.user.name}}</span>\\n\\n\\t</div>\\n</div>\",\n    \"memes.html\": \"<div class=\\\"memes-container\\\">\\n\\t<div class=\\\"memes-filters\\\">\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<a href=\\\"link-to:/memes/create\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-default full-width\\\" aria-label=\\\"Left Align\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span>\\n\\t\\t\\t\\t\\tCreate a Meme\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</a>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<input class=\\\"form-control\\\" placeholder=\\\"Filter by meme text\\\" type=\\\"text\\\">\\n\\t\\t</div>\\n\\t\\t<div class=\\\"users\\\">\\n\\t\\t\\t<div class=\\\"panel panel-default\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\tFilter by Users\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t\\t<!-- \\n\\t\\t\\t\\t\\t{{#each user in model.users}}\\n\\t\\t\\t\\t\\t\\t{{user-filter-toggler content=user}}\\n\\t\\t\\t\\t\\t{{/each}}\\n\\t\\t\\t\\t\\t-->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"memes-list\\\">\\n\\t\\t<!--\\n\\t\\t{{#each meme in filteredContent}}\\n\\t\\t\\t{{meme-list-item content=meme}}\\n\\t\\t{{/each}}\\n\\t\\t-->\\n\\t</div>\\n</div>\",\n    \"user-filter-toggler-selected.html\": \"<!-- onclick: toggle selection -->\\n<div class=\\\"label label-success\\\">\\n\\tUsername\\n</div>\",\n    \"user-filter-toggler.html\": \"<!-- onclick: toggle selection -->\\n<div class=\\\"label label-primary\\\">\\n\\tUsername\\n</div>\" };\n\n});","define('meme-gen-tutorial/templates/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n  function program1(depth0,data) {\n    \n    \n    data.buffer.push(\"Memes\");\n    }\n\n  function program3(depth0,data) {\n    \n    \n    data.buffer.push(\"Spec\");\n    }\n\n    data.buffer.push(\"<nav class=\\\"navbar navbar-default\\\">\\n\t<div class=\\\"container-fluid\\\">\\n\t\t<div class=\\\"navbar-header\\\">\\n\t\t\t<a class='navbar-brand'>Meme Generator</a>\\n\t\t</div>\\n\t\t<div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n\t\t\t<ul class=\\\"nav navbar-nav\\\">\\n\t\t\t\t<li>\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"memes\", options) : helperMissing.call(depth0, \"link-to\", \"memes\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</li>\\n\t\t\t\t<li>\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"spec\", options) : helperMissing.call(depth0, \"link-to\", \"spec\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</li>\\n\t\t\t</ul>\\n\t\t</div>\\n\t</div>\\n</nav>\\n\");\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/components/code-snippet', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"source\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/components/element-highlighter', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"yield\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/components/meme-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n    data.buffer.push(\"<div class='opener' \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'style': (\"openerStyle\")\n    },hashTypes:{'style': \"ID\"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n\t\");\n    data.buffer.push(escapeExpression((helper = helpers['text-editor'] || (depth0 && depth0['text-editor']),options={hash:{\n      'text': (\"content.opener\"),\n      'editable': (\"editable\")\n    },hashTypes:{'text': \"ID\",'editable': \"ID\"},hashContexts:{'text': depth0,'editable': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"text-editor\", options))));\n    data.buffer.push(\"\\n</div>\\n<div class='closer' \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'style': (\"closerStyle\")\n    },hashTypes:{'style': \"ID\"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n\t\");\n    data.buffer.push(escapeExpression((helper = helpers['text-editor'] || (depth0 && depth0['text-editor']),options={hash:{\n      'text': (\"content.closer\"),\n      'editable': (\"editable\")\n    },hashTypes:{'text': \"ID\",'editable': \"ID\"},hashContexts:{'text': depth0,'editable': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"text-editor\", options))));\n    data.buffer.push(\"\\n</div>\\n\\n\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/components/meme-list-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n\t\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"meme.edit\", \"content\", options) : helperMissing.call(depth0, \"link-to\", \"meme.edit\", \"content\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"deleteMeme\", \"content\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n    data.buffer.push(\">\\n\t<span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n\t</button>\\n\t\");\n    return buffer;\n    }\n  function program2(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n\t<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n\t<span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n\t</button>\\n\t\");\n    }\n\n    data.buffer.push(\"<div class=\\\"panel-body\\\">\\n\t\");\n    data.buffer.push(escapeExpression((helper = helpers['meme-item'] || (depth0 && depth0['meme-item']),options={hash:{\n      'content': (\"content\")\n    },hashTypes:{'content': \"ID\"},hashContexts:{'content': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"meme-item\", options))));\n    data.buffer.push(\"\\n</div>\\n<div class=\\\"panel-footer\\\">\\n\t\");\n    stack1 = helpers['if'].call(depth0, \"content.isMine\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t<button type=\\\"button\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":btn content.likedByMe:liked\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\" aria-label=\\\"Left Align\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleLike\", \"content\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n    data.buffer.push(\">\\n\t<span class=\\\"glyphicon glyphicon-heart\\\" aria-hidden=\\\"true\\\"></span>\\n\t<span class='badge'>\");\n    stack1 = helpers._triageMustache.call(depth0, \"content.likes\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\\n\t</button>\\n\t<span class=\\\"label label-info\\\">Created by \");\n    stack1 = helpers._triageMustache.call(depth0, \"content.user.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\\n</div>\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/components/text-editor', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"<div class='document-section'>\");\n    stack1 = helpers._triageMustache.call(depth0, \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</div>\");\n    return buffer;\n    }\n\n    stack1 = helpers.each.call(depth0, \"paragraphs\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/components/user-filter-toggler', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"content.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/frames/_create', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    \n\n\n    data.buffer.push(\"<div class=\\\"panel panel-default meme-panel\\\">\\n\t<div class=\\\"panel-heading\\\">\\n\t\t<span>Create Meme</span>\\n\t</div>\\n\t<div class=\\\"panel-body flex\\\">\\n\t\t<div class=\\\"panel panel-default meme-controls\\\">\\n\t\t\t<div class=\\\"panel-body\\\">\\n\t\t\t\t<div class=\\\"form-group\\\">\\n\t\t\t\t\t<label>Image URL</label>\\n\t\t\t\t\t<input class=\\\"ember-view ember-text-field form-control\\\" placeholder=\\\"Image URL\\\" type=\\\"text\\\">\\n\t\t\t\t</div>\\n\t\t\t\t<div class=\\\"form-group\\\">\\n\t\t\t\t\t<label>Opener Font Size</label>\\n\t\t\t\t\t<input class=\\\"ember-view ember-text-field form-control\\\" placeholder=\\\"Search\\\" type=\\\"range\\\">\\n\t\t\t\t</div>\\n\t\t\t\t<div class=\\\"form-group\\\">\\n\t\t\t\t\t<label>Closer Font Size</label>\\n\t\t\t\t\t<input class=\\\"ember-view ember-text-field form-control\\\" placeholder=\\\"Search\\\" type=\\\"range\\\">\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t</div>\\n\t\t<div class=\\\"ember-view meme-item editable\\\" style=\\\"background-image: url(http://lh4.ggpht.com/NgmqkelleJw8GYypJRPyo10HUnMZ7aR8YbkT8ZNXAQC9KLChDT-yGvOy9R4WGEuEUDpjs-ERNYx6kU9PKWDS9OAtAOsp=s0)\\\"><div class=\\\"opener ui-draggable ui-draggable-handle\\\" style=\\\"font-size: 60px; top: 0px;\\\">\\n\t<div class=\\\"ember-view TextEditor\\\" contenteditable=\\\"true\\\"><div class=\\\"document-section\\\">Opener</div>\\n</div>\\n</div>\\n<div class=\\\"closer ui-draggable ui-draggable-handle\\\" style=\\\"font-size: 60px; bottom: 0px;\\\">\\n\t<div class=\\\"ember-view TextEditor\\\" contenteditable=\\\"true\\\"><div class=\\\"document-section\\\">Closer</div>\\n</div>\\n</div>\\n\\n</div>\\n\t</div>\\n\t<div class=\\\"panel-footer align-right\\\">\\n\t\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\">\\n\t\t\tCreate\\n\t\t</button>\\n\t\t<a>\\n\t\t\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\">\\n\t\t\t\tCancel\\n\t\t\t</button>\\n\t\t</a>\\n\t\t\\n\t</div>\\n</div>\");\n    \n  });\n\n});","define('meme-gen-tutorial/templates/frames/_edit', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    \n\n\n    data.buffer.push(\"<div class=\\\"panel panel-default meme-panel\\\">\\n\t<div class=\\\"panel-heading\\\">\\n\t\t<span>Edit Meme</span>\\n\t</div>\\n\t<div class=\\\"panel-body flex\\\">\\n\t\t<div class=\\\"panel panel-default meme-controls\\\">\\n\t\t\t<div class=\\\"panel-body\\\">\\n\t\t\t\t<div class=\\\"form-group\\\">\\n\t\t\t\t\t<label>Image URL</label>\\n\t\t\t\t\t<input class=\\\"ember-view ember-text-field form-control\\\" placeholder=\\\"Image URL\\\" type=\\\"text\\\">\\n\t\t\t\t</div>\\n\t\t\t\t<div class=\\\"form-group\\\">\\n\t\t\t\t\t<label>Opener Font Size</label>\\n\t\t\t\t\t<input class=\\\"ember-view ember-text-field form-control\\\" placeholder=\\\"Search\\\" type=\\\"range\\\">\\n\t\t\t\t</div>\\n\t\t\t\t<div class=\\\"form-group\\\">\\n\t\t\t\t\t<label>Closer Font Size</label>\\n\t\t\t\t\t<input class=\\\"ember-view ember-text-field form-control\\\" placeholder=\\\"Search\\\" type=\\\"range\\\">\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t</div>\\n\t\t<div class=\\\"ember-view meme-item editable\\\" style=\\\"background-image: url(http://lh4.ggpht.com/NgmqkelleJw8GYypJRPyo10HUnMZ7aR8YbkT8ZNXAQC9KLChDT-yGvOy9R4WGEuEUDpjs-ERNYx6kU9PKWDS9OAtAOsp=s0)\\\"><div class=\\\"opener ui-draggable ui-draggable-handle\\\" style=\\\"font-size: 60px; top: 0px;\\\">\\n\t<div class=\\\"ember-view TextEditor\\\" contenteditable=\\\"true\\\"><div class=\\\"document-section\\\">Opener</div>\\n</div>\\n</div>\\n<div class=\\\"closer ui-draggable ui-draggable-handle\\\" style=\\\"font-size: 60px; bottom: 0px;\\\">\\n\t<div class=\\\"ember-view TextEditor\\\" contenteditable=\\\"true\\\"><div class=\\\"document-section\\\">Closer</div>\\n</div>\\n</div>\\n\\n</div>\\n\t</div>\\n\t<div class=\\\"panel-footer align-right\\\">\\n\t\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\">\\n\t\t\tSave\\n\t\t</button>\\n\t\t<a>\\n\t\t\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\">\\n\t\t\t\tCancel\\n\t\t\t</button>\\n\t\t</a>\\n\t\t\\n\t</div>\\n</div>\");\n    \n  });\n\n});","define('meme-gen-tutorial/templates/frames/_meme-item-editable', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    \n\n\n    data.buffer.push(\"<div class=\\\"meme-item\\\" style=\\\"background-image: url(http://lh4.ggpht.com/NgmqkelleJw8GYypJRPyo10HUnMZ7aR8YbkT8ZNXAQC9KLChDT-yGvOy9R4WGEuEUDpjs-ERNYx6kU9PKWDS9OAtAOsp=s0)\\\"><div class=\\\"opener\\\" style=\\\"font-size: 55px; top: 0px;\\\">\\n\t<div class=\\\"TextEditor\\\" contenteditable=\\\"true\\\"><div class=\\\"document-section\\\">Opener</div>\\n</div>\\n</div>\\n<div class=\\\"closer\\\" style=\\\"font-size: 60px; bottom: 0px;\\\">\\n<div class=\\\"TextEditor\\\" contenteditable=\\\"true\\\"><div class=\\\"document-section\\\">Closer</div>\\n</div>\\n</div>\\n</div>\");\n    \n  });\n\n});","define('meme-gen-tutorial/templates/frames/_meme-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    \n\n\n    data.buffer.push(\"<div class=\\\"meme-item not-editable\\\" style=\\\"background-image: url(http://lh4.ggpht.com/NgmqkelleJw8GYypJRPyo10HUnMZ7aR8YbkT8ZNXAQC9KLChDT-yGvOy9R4WGEuEUDpjs-ERNYx6kU9PKWDS9OAtAOsp=s0)\\\"><div class=\\\"opener\\\" style=\\\"font-size: 55px; top: 0px;\\\">\\n\t<div class=\\\"TextEditor\\\" contenteditable=\\\"false\\\"><div class=\\\"document-section\\\">Opener</div>\\n</div>\\n</div>\\n<div class=\\\"closer\\\" style=\\\"font-size: 60px; bottom: 0px;\\\">\\n<div class=\\\"TextEditor\\\" contenteditable=\\\"false\\\"><div class=\\\"document-section\\\">Closer</div>\\n</div>\\n</div>\\n</div>\");\n    \n  });\n\n});","define('meme-gen-tutorial/templates/frames/_meme-list-item-liked', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    \n\n\n    data.buffer.push(\"<div class=\\\"meme-list-item panel panel-default\\\"><div class=\\\"panel-body\\\">\\n\t<div class=\\\"meme-item not-editable\\\" style=\\\"background-image: url(http://lh4.ggpht.com/NgmqkelleJw8GYypJRPyo10HUnMZ7aR8YbkT8ZNXAQC9KLChDT-yGvOy9R4WGEuEUDpjs-ERNYx6kU9PKWDS9OAtAOsp=s0)\\\"><div class=\\\"opener\\\" style=\\\"font-size: 55px; top: 0px;\\\">\\n\t<div class=\\\"TextEditor\\\" contenteditable=\\\"false\\\"><div class=\\\"document-section\\\">Opener</div>\\n</div>\\n</div>\\n<div class=\\\"closer\\\" style=\\\"font-size: 60px; bottom: 0px;\\\">\\n\t<div class=\\\"TextEditor\\\" contenteditable=\\\"false\\\"><div class=\\\"document-section\\\">Closer</div>\\n</div>\\n</div>\\n\\n</div>\\n</div>\\n<div class=\\\"panel-footer\\\">\\n\t\\n\t<a>\\n\t<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n\t<span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n\t</button>\\n\t</a>\\n\t<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n\t<span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n\t</button>\\n\t\\n\t<button type=\\\"button\\\" class=\\\"btn liked\\\" aria-label=\\\"Left Align\\\">\\n\t<span class=\\\"glyphicon glyphicon-heart\\\" aria-hidden=\\\"true\\\"></span>\\n\t<span class=\\\"badge\\\">0</span>\\n\t</button>\\n\t<span class=\\\"label label-info\\\">Created by User</span>\\n</div></div>\");\n    \n  });\n\n});","define('meme-gen-tutorial/templates/frames/_meme-list-item-of-another', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    \n\n\n    data.buffer.push(\"<div class=\\\"meme-list-item panel panel-default\\\"><div class=\\\"panel-body\\\">\\n\t<div class=\\\"meme-item not-editable\\\" style=\\\"background-image: url(http://lh4.ggpht.com/NgmqkelleJw8GYypJRPyo10HUnMZ7aR8YbkT8ZNXAQC9KLChDT-yGvOy9R4WGEuEUDpjs-ERNYx6kU9PKWDS9OAtAOsp=s0)\\\"><div class=\\\"opener\\\" style=\\\"font-size: 55px; top: 0px;\\\">\\n\t<div class=\\\"TextEditor\\\" contenteditable=\\\"false\\\"><div class=\\\"document-section\\\">Opener</div>\\n</div>\\n</div>\\n<div class=\\\"closer\\\" style=\\\"font-size: 60px; bottom: 0px;\\\">\\n\t<div class=\\\"TextEditor\\\" contenteditable=\\\"false\\\"><div class=\\\"document-section\\\">Closer</div>\\n</div>\\n</div>\\n\\n</div>\\n</div>\\n<div class=\\\"panel-footer\\\">\\n\t<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n\t<span class=\\\"glyphicon glyphicon-heart\\\" aria-hidden=\\\"true\\\"></span>\\n\t<span class=\\\"badge\\\">0</span>\\n\t</button>\\n\t<span class=\\\"label label-info\\\">Created by User</span>\\n</div></div>\");\n    \n  });\n\n});","define('meme-gen-tutorial/templates/frames/_meme-list-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    \n\n\n    data.buffer.push(\"<div class=\\\"meme-list-item panel panel-default\\\">\\n\t<div class=\\\"panel-body\\\">\\n\t\t<div class=\\\"meme-item not-editable\\\" style=\\\"background-image: url(http://lh4.ggpht.com/NgmqkelleJw8GYypJRPyo10HUnMZ7aR8YbkT8ZNXAQC9KLChDT-yGvOy9R4WGEuEUDpjs-ERNYx6kU9PKWDS9OAtAOsp=s0)\\\"><div class=\\\"opener\\\" style=\\\"font-size: 55px; top: 0px;\\\">\\n\t\t\t<div class=\\\"TextEditor\\\" contenteditable=\\\"false\\\"><div class=\\\"document-section\\\">Opener</div>\\n\t\t</div>\\n\t</div>\\n\t<div class=\\\"closer\\\" style=\\\"font-size: 60px; bottom: 0px;\\\">\\n\t\t<div class=\\\"TextEditor\\\" contenteditable=\\\"false\\\"><div class=\\\"document-section\\\">Closer</div>\\n\t</div>\\n</div>\\n</div>\\n</div>\\n<div class=\\\"panel-footer\\\">\\n<a>\\n<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n<span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n</button>\\n</a>\\n<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n<span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n</button>\\n<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n<span class=\\\"glyphicon glyphicon-heart\\\" aria-hidden=\\\"true\\\"></span>\\n<span class=\\\"badge\\\">0</span>\\n</button>\\n<span class=\\\"label label-info\\\">Created by User</span>\\n</div></div>\");\n    \n  });\n\n});","define('meme-gen-tutorial/templates/frames/_memes', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    \n\n\n    data.buffer.push(\"<div class=\\\"memes-container\\\">\\n\t<div class=\\\"memes-filters\\\">\\n\t\t<div class=\\\"form-group\\\">\\n\t\t\t<a>\\n\t\t\t\t<button type=\\\"button\\\" class=\\\"btn btn-default full-width\\\" aria-label=\\\"Left Align\\\">\\n\t\t\t\t<span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span>\\n\t\t\t\tCreate a Meme\\n\t\t\t\t</button>\\n\t\t\t</a>\\n\t\t</div>\\n\t\t<div class=\\\"form-group\\\">\\n\t\t\t<input class=\\\"ember-text-field form-control\\\" placeholder=\\\"Filter by meme text\\\" type=\\\"text\\\">\\n\t\t</div>\\n\t\t<div class=\\\"users\\\">\\n\t\t\t<div class=\\\"panel panel-default\\\">\\n\t\t\t\t<div class=\\\"panel-heading\\\">\\n\t\t\t\t\tFilter by Users\\n\t\t\t\t</div>\\n\t\t\t\t<div class=\\\"panel-body\\\">\\n\t\t\t\t\t<div class=\\\"label label-primary\\\">Rami\\n\t\t\t\t\t</div><div class=\\\"label label-primary\\\">Amir\\n\t\t\t\t</div><div class=\\\"label label-primary\\\">Emmanuel\\n\t\t\t</div><div class=\\\"label label-primary\\\">Eyal\\n\t\t</div><div class=\\\"label label-primary\\\">Gal\\n\t</div><div class=\\\"label label-primary\\\">Gennady\\n</div><div class=\\\"label label-primary\\\">Gilad\\n</div><div class=\\\"label label-primary\\\">Jonathan\\n</div><div class=\\\"label label-primary\\\">Liad\\n</div><div class=\\\"label label-primary\\\">Ronny\\n</div><div class=\\\"label label-primary\\\">Tal\\n</div><div class=\\\"label label-primary\\\">Yoni\\n</div>\\n</div>\\n</div>\\n</div>\\n</div>\\n<div class=\\\"memes-list\\\">\\n<div class=\\\"meme-list-item panel panel-default\\\">  <div class=\\\"panel-body\\\">\\n<div class=\\\"meme-item not-editable\\\" style=\\\"background-image: url(http://lh4.ggpht.com/NgmqkelleJw8GYypJRPyo10HUnMZ7aR8YbkT8ZNXAQC9KLChDT-yGvOy9R4WGEuEUDpjs-ERNYx6kU9PKWDS9OAtAOsp=s0)\\\"><div class=\\\"opener\\\" style=\\\"font-size: 55px; top: 0px;\\\">\\n<div class=\\\"TextEditor\\\" contenteditable=\\\"false\\\"><div class=\\\"document-section\\\">Opener</div>\\n</div>\\n</div>\\n<div class=\\\"closer\\\" style=\\\"font-size: 60px; bottom: 0px;\\\">\\n<div class=\\\"TextEditor\\\" contenteditable=\\\"false\\\"><div class=\\\"document-section\\\">Closer</div>\\n</div>\\n</div>\\n</div>\\n</div>\\n<div class=\\\"panel-footer\\\">\\n<a>\\n<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n<span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n</button>\\n</a>\\n<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\" data-ember-action=\\\"666\\\">\\n<span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n</button>\\n<button type=\\\"button\\\" class=\\\"btn\\\" data-bindattr-638=\\\"638\\\" aria-label=\\\"Left Align\\\" data-ember-action=\\\"639\\\">\\n<span class=\\\"glyphicon glyphicon-heart\\\" aria-hidden=\\\"true\\\"></span>\\n<span class=\\\"badge\\\">0</span>\\n</button>\\n<span class=\\\"label label-info\\\">Created by Rami</span>\\n</div>\\n</div>\\n<div class=\\\"meme-list-item panel panel-default\\\">  <div class=\\\"panel-body\\\">\\n<div class=\\\"meme-item not-editable\\\" style=\\\"background-image: url(http://lh4.ggpht.com/NgmqkelleJw8GYypJRPyo10HUnMZ7aR8YbkT8ZNXAQC9KLChDT-yGvOy9R4WGEuEUDpjs-ERNYx6kU9PKWDS9OAtAOsp=s0)\\\"><div class=\\\"opener\\\" style=\\\"font-size: 55px; top: 0px;\\\">\\n<div class=\\\"TextEditor\\\" contenteditable=\\\"false\\\"><div class=\\\"document-section\\\">Opener</div>\\n</div>\\n</div>\\n<div class=\\\"closer\\\" style=\\\"font-size: 60px; bottom: 0px;\\\">\\n<div class=\\\"TextEditor\\\" contenteditable=\\\"false\\\"><div class=\\\"document-section\\\">Closer</div>\\n</div>\\n</div>\\n</div>\\n</div>\\n<div class=\\\"panel-footer\\\">\\n<a>\\n<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n<span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n</button>\\n</a>\\n<button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\" data-ember-action=\\\"666\\\">\\n<span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n</button>\\n<button type=\\\"button\\\" class=\\\"btn\\\" data-bindattr-638=\\\"638\\\" aria-label=\\\"Left Align\\\" data-ember-action=\\\"639\\\">\\n<span class=\\\"glyphicon glyphicon-heart\\\" aria-hidden=\\\"true\\\"></span>\\n<span class=\\\"badge\\\">0</span>\\n</button>\\n<span class=\\\"label label-info\\\">Created by Rami</span>\\n</div>\\n</div>\\n</div>\\n</div>\");\n    \n  });\n\n});","define('meme-gen-tutorial/templates/frames/_user-filter-toggler-selected', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    \n\n\n    data.buffer.push(\"<div class=\\\"label label-success\\\">Username</div>\");\n    \n  });\n\n});","define('meme-gen-tutorial/templates/frames/_user-filter-toggler', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    \n\n\n    data.buffer.push(\"<div class=\\\"label label-primary\\\">Username</div>\");\n    \n  });\n\n});","define('meme-gen-tutorial/templates/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/meme-list-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n      \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"meme.edit\", \"meme\", options) : helperMissing.call(depth0, \"link-to\", \"meme.edit\", \"meme\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n      <button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"deleteMeme\", \"meme\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n    data.buffer.push(\">\\n        <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n      </button>\\n    \");\n    return buffer;\n    }\n  function program2(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n        <button type=\\\"button\\\" class=\\\"btn\\\" aria-label=\\\"Left Align\\\">\\n          <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n        </button>\\n      \");\n    }\n\n    data.buffer.push(\"  <div class=\\\"panel-body\\\">\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers['meme-item'] || (depth0 && depth0['meme-item']),options={hash:{\n      'content': (\"view.content\")\n    },hashTypes:{'content': \"ID\"},hashContexts:{'content': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"meme-item\", options))));\n    data.buffer.push(\"\\n  </div>\\n  <div class=\\\"panel-footer\\\">\\n    \");\n    stack1 = helpers['if'].call(depth0, \"view.content.isMine\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n  \t<button type=\\\"button\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":btn view.content.likedByMe:liked\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\" aria-label=\\\"Left Align\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleLike\", \"view.content\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n    data.buffer.push(\">\\n\t  <span class=\\\"glyphicon glyphicon-heart\\\" aria-hidden=\\\"true\\\"></span>\\n\t  <span class='badge'>\");\n    stack1 = helpers._triageMustache.call(depth0, \"view.content.likes\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\\n\t</button>\\n\t<span class=\\\"label label-info\\\">Created by \");\n    stack1 = helpers._triageMustache.call(depth0, \"view.content.user.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\\n  </div>\\n\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/meme-with-controls', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n\t\t\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\">\\n\t\t\t\tCancel\\n\t\t\t</button>\\n\t\t\");\n    }\n\n    data.buffer.push(\"<div class=\\\"panel panel-default meme-panel\\\">\\n\t<div class=\\\"panel-heading\\\">\\n\t\t<span>\");\n    stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\\n\t</div>\\n\t<div class=\\\"panel-body flex\\\">\\n\t\t<div class=\\\"panel panel-default meme-controls\\\">\\n\t\t\t<div class=\\\"panel-body\\\">\\n\t\t\t\t<div class=\\\"form-group\\\">\\n\t\t\t\t\t<label>Image URL</label>\\n\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'classNames': (\"form-control\"),\n      'placeholder': (\"Image URL\"),\n      'value': (\"model.imgSrc\")\n    },hashTypes:{'classNames': \"STRING\",'placeholder': \"STRING\",'value': \"ID\"},hashContexts:{'classNames': depth0,'placeholder': depth0,'value': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n\t\t\t\t</div>\\n\t\t\t\t<div class=\\\"form-group\\\">\\n\t\t\t\t\t<label>Opener Font Size</label>\\n\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'type': (\"range\"),\n      'classNames': (\"form-control\"),\n      'value': (\"model.openerFontSize\")\n    },hashTypes:{'type': \"STRING\",'classNames': \"STRING\",'value': \"ID\"},hashContexts:{'type': depth0,'classNames': depth0,'value': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n\t\t\t\t</div>\\n\t\t\t\t<div class=\\\"form-group\\\">\\n\t\t\t\t\t<label>Closer Font Size</label>\\n\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'type': (\"range\"),\n      'classNames': (\"form-control\"),\n      'value': (\"model.closerFontSize\")\n    },hashTypes:{'type': \"STRING\",'classNames': \"STRING\",'value': \"ID\"},hashContexts:{'type': depth0,'classNames': depth0,'value': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t</div>\\n\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers['meme-item'] || (depth0 && depth0['meme-item']),options={hash:{\n      'editable': (true),\n      'content': (\"model\")\n    },hashTypes:{'editable': \"BOOLEAN\",'content': \"ID\"},hashContexts:{'editable': depth0,'content': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"meme-item\", options))));\n    data.buffer.push(\"\\n\t</div>\\n\t<div class=\\\"panel-footer align-right\\\">\\n\t\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"saveMeme\", \"model\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n    data.buffer.push(\">\\n\t\t\t\");\n    stack1 = helpers._triageMustache.call(depth0, \"actionName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t</button>\\n\t\t\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"memes.index\", options) : helperMissing.call(depth0, \"link-to\", \"memes.index\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t\\n\t</div>\\n</div>\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/meme', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/meme/error', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    \n\n\n    data.buffer.push(\"<div class=\\\"panel panel-default meme-panel\\\">\\n\t<div class=\\\"panel-heading\\\">\\n\t\t<span>Error</span>\\n\t</div>\\n\t<div class=\\\"panel-body\\\">\\n\t\tCould not find meme\\n\t</div>\\n</div>\");\n    \n  });\n\n});","define('meme-gen-tutorial/templates/meme/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(escapeExpression((helper = helpers['meme-item'] || (depth0 && depth0['meme-item']),options={hash:{\n      'editable': (true),\n      'content': (\"model\")\n    },hashTypes:{'editable': \"BOOLEAN\",'content': \"ID\"},hashContexts:{'editable': depth0,'content': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"meme-item\", options))));\n    \n  });\n\n});","define('meme-gen-tutorial/templates/memes', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/memes/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n\t\t\t\t<button type=\\\"button\\\" class=\\\"btn btn-default full-width\\\" aria-label=\\\"Left Align\\\">\\n\t\t\t\t  <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span>\\n\t\t\t\t  Create a Meme\\n\t\t\t\t</button>\\n\t\t\t\");\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers['meme-list-item'] || (depth0 && depth0['meme-list-item']),options={hash:{\n      'content': (\"meme\"),\n      'toggleLike': (\"toggleLike\"),\n      'deleteMeme': (\"deleteMeme\")\n    },hashTypes:{'content': \"ID\",'toggleLike': \"STRING\",'deleteMeme': \"STRING\"},hashContexts:{'content': depth0,'toggleLike': depth0,'deleteMeme': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"meme-list-item\", options))));\n    data.buffer.push(\"\\n\t\t\");\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n\t\t\t<div class=\\\"panel panel-default\\\">\\n\t\t\t  <div class=\\\"panel-body center\\\">\\n\t\t\t    No memes were found\\n\t\t\t  </div>\\n\t\t\t</div>\\n\t\t\");\n    }\n\n    data.buffer.push(\"<div class='memes-container'>\\n\t<div class='memes-filters'>\\n\t\t<div class=\\\"form-group\\\">\\n\t\t\t\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"memes.create\", options) : helperMissing.call(depth0, \"link-to\", \"memes.create\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t</div>\\n\t\t<div class=\\\"form-group\\\">\\n\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"searchTerm\"),\n      'classNames': (\"form-control\"),\n      'placeholder': (\"Filter by meme text\")\n    },hashTypes:{'value': \"ID\",'classNames': \"STRING\",'placeholder': \"STRING\"},hashContexts:{'value': depth0,'classNames': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n\t\t</div>\\n\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"users-filter\", options) : helperMissing.call(depth0, \"outlet\", \"users-filter\", options))));\n    data.buffer.push(\"\\n\t</div>\\n\t<div class=\\\"memes-list\\\">\\n\t\t\");\n    stack1 = helpers.each.call(depth0, \"meme\", \"in\", \"filteredMemes\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t</div>\\n</div>\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/spec', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n  function program1(depth0,data) {\n    \n    \n    data.buffer.push(\"/memes\");\n    }\n\n  function program3(depth0,data) {\n    \n    \n    data.buffer.push(\"/memes/create\");\n    }\n\n  function program5(depth0,data) {\n    \n    \n    data.buffer.push(\"/memes/:meme_id/edit\");\n    }\n\n  function program7(depth0,data) {\n    \n    \n    data.buffer.push(\"meme-list-item\");\n    }\n\n  function program9(depth0,data) {\n    \n    \n    data.buffer.push(\"user-filter-toggler\");\n    }\n\n  function program11(depth0,data) {\n    \n    \n    data.buffer.push(\"meme-item\");\n    }\n\n    data.buffer.push(\"<div class=\\\"panel panel-default\\\">\\n\t<div class='panel-body'>\\n\t\t<div class='row'>\\n\t\t\t<div class=\\\"col-xs-2\\\">\\n\t\t\t\t<h4>Routes</h4>\\n\t\t\t\t<div class=\\\"list-group\\\">\\n\t\t\t\t\t\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{\n      'classNames': (\"list-group-item\")\n    },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"spec.memes-route\", options) : helperMissing.call(depth0, \"link-to\", \"spec.memes-route\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t\t\t\t\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{\n      'classNames': (\"list-group-item\")\n    },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"spec.create-route\", options) : helperMissing.call(depth0, \"link-to\", \"spec.create-route\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t\t\t\t\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{\n      'classNames': (\"list-group-item\")\n    },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"spec.edit-route\", options) : helperMissing.call(depth0, \"link-to\", \"spec.edit-route\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t\t\t</div>\\n\t\t\t\t<h4>Components</h4>\\n\t\t\t\t<div class=\\\"list-group\\\">\\n\t\t\t\t\t\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{\n      'classNames': (\"list-group-item\")\n    },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"spec.meme-list-item\", options) : helperMissing.call(depth0, \"link-to\", \"spec.meme-list-item\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t\t\t\t\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{\n      'classNames': (\"list-group-item\")\n    },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"spec.user-filter-toggler\", options) : helperMissing.call(depth0, \"link-to\", \"spec.user-filter-toggler\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t\t\t\t\");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{\n      'classNames': (\"list-group-item\")\n    },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"spec.meme-item\", options) : helperMissing.call(depth0, \"link-to\", \"spec.meme-item\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t\t<div class=\\\"col-xs-10\\\">\\n\t\t\t\t\");\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t\t</div>\\n\t\t</div>\t\\n\t</div>\\n</div>\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/spec/create-route', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n\t<div class=\\\"panel panel-default\\\">\\n\t\t<div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">/memes/create</h3></div>\\n\t\t<div class='panel-body'>\\n\t\t\t<div class='row'>\\n\t\t\t\t<div class=\\\"col-xs-6 frame\\\" style=\\\"zoom:0.5\\\">\\n\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"frames/create\", options) : helperMissing.call(depth0, \"partial\", \"frames/create\", options))));\n    data.buffer.push(\"\\n\t\t\t\t</div>\\n\t\t\t\t<div class=\\\"col-xs-6\\\">\\n\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers['code-snippet'] || (depth0 && depth0['code-snippet']),options={hash:{\n      'name': (\"create.html\"),\n      'indent': (false),\n      'language': (\"html\")\n    },hashTypes:{'name': \"STRING\",'indent': \"BOOLEAN\",'language': \"STRING\"},hashContexts:{'name': depth0,'indent': depth0,'language': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"code-snippet\", options))));\n    data.buffer.push(\"\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t</div>\\n\t</div>\\n\");\n    return buffer;\n    }\n\n    stack1 = (helper = helpers['element-highlighter'] || (depth0 && depth0['element-highlighter']),options={hash:{\n      'data': (\"highlightData.create\")\n    },hashTypes:{'data': \"ID\"},hashContexts:{'data': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"element-highlighter\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    else { data.buffer.push(''); }\n    \n  });\n\n});","define('meme-gen-tutorial/templates/spec/edit-route', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n\t<div class=\\\"panel panel-default\\\">\\n\t\t<div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">/memes/:meme_id/edit</h3></div>\\n\t\t<div class='panel-body'>\\n\t\t\t<div class='row'>\\n\t\t\t\t<div class=\\\"col-xs-6 frame\\\" style=\\\"zoom:0.5\\\">\\n\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"frames/edit\", options) : helperMissing.call(depth0, \"partial\", \"frames/edit\", options))));\n    data.buffer.push(\"\\n\t\t\t\t</div>\\n\t\t\t\t<div class=\\\"col-xs-6\\\">\\n\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers['code-snippet'] || (depth0 && depth0['code-snippet']),options={hash:{\n      'name': (\"edit.html\"),\n      'indent': (false),\n      'language': (\"html\")\n    },hashTypes:{'name': \"STRING\",'indent': \"BOOLEAN\",'language': \"STRING\"},hashContexts:{'name': depth0,'indent': depth0,'language': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"code-snippet\", options))));\n    data.buffer.push(\"\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t</div>\\n\t</div>\\n\");\n    return buffer;\n    }\n\n    stack1 = (helper = helpers['element-highlighter'] || (depth0 && depth0['element-highlighter']),options={hash:{\n      'data': (\"highlightData.edit\")\n    },hashTypes:{'data': \"ID\"},hashContexts:{'data': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"element-highlighter\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    else { data.buffer.push(''); }\n    \n  });\n\n});","define('meme-gen-tutorial/templates/spec/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/spec/meme-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n\t\t\t<div class=\\\"panel panel-default\\\">\\n\t\t\t\t<div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Not Editable</h3></div>\\n\t\t\t\t<div class='panel-body'>\\n\t\t\t\t\t<div class='row'>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6 frame\\\" style=\\\"zoom:0.7;\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"frames/meme-item\", options) : helperMissing.call(depth0, \"partial\", \"frames/meme-item\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers['code-snippet'] || (depth0 && depth0['code-snippet']),options={hash:{\n      'name': (\"meme-item.html\"),\n      'indent': (false),\n      'language': (\"html\")\n    },hashTypes:{'name': \"STRING\",'indent': \"BOOLEAN\",'language': \"STRING\"},hashContexts:{'name': depth0,'indent': depth0,'language': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"code-snippet\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t</div>\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t\");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n\t\t\t<div class=\\\"panel panel-default\\\">\\n\t\t\t\t<div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Editable</h3></div>\\n\t\t\t\t<div class='panel-body'>\\n\t\t\t\t\t<div class='row'>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6 frame\\\" style=\\\"zoom:0.7;\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"frames/meme-item-editable\", options) : helperMissing.call(depth0, \"partial\", \"frames/meme-item-editable\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers['code-snippet'] || (depth0 && depth0['code-snippet']),options={hash:{\n      'name': (\"meme-item-editable.html\"),\n      'indent': (false),\n      'language': (\"html\")\n    },hashTypes:{'name': \"STRING\",'indent': \"BOOLEAN\",'language': \"STRING\"},hashContexts:{'name': depth0,'indent': depth0,'language': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"code-snippet\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t</div>\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t\");\n    return buffer;\n    }\n\n    data.buffer.push(\"<div class=\\\"panel panel-default\\\">\\n\t<div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">meme-item Component</h3></div>\\n\t<div class='panel-body'>\\n\t\t\");\n    stack1 = (helper = helpers['element-highlighter'] || (depth0 && depth0['element-highlighter']),options={hash:{\n      'data': (\"highlightData.memeItem\")\n    },hashTypes:{'data': \"ID\"},hashContexts:{'data': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"element-highlighter\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t\");\n    stack1 = (helper = helpers['element-highlighter'] || (depth0 && depth0['element-highlighter']),options={hash:{\n      'data': (\"highlightData.memeItem\")\n    },hashTypes:{'data': \"ID\"},hashContexts:{'data': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"element-highlighter\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t</div>\\n</div>\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/spec/meme-list-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n\t\t\t<div class=\\\"panel panel-default\\\">\\n\t\t\t\t<div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Does not belong to current user; Not liked by current user</h3></div>\\n\t\t\t\t<div class='panel-body'>\\n\t\t\t\t\t<div class='row'>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6 frame\\\" style=\\\"zoom:0.7;\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"frames/meme-list-item-of-another\", options) : helperMissing.call(depth0, \"partial\", \"frames/meme-list-item-of-another\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers['code-snippet'] || (depth0 && depth0['code-snippet']),options={hash:{\n      'name': (\"meme-list-item-of-another.html\"),\n      'indent': (false),\n      'language': (\"html\")\n    },hashTypes:{'name': \"STRING\",'indent': \"BOOLEAN\",'language': \"STRING\"},hashContexts:{'name': depth0,'indent': depth0,'language': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"code-snippet\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t</div>\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t\");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n\t\t\t<div class=\\\"panel panel-default\\\">\\n\t\t\t\t<div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Belongs to current user; Not liked by current user</h3></div>\\n\t\t\t\t<div class='panel-body'>\\n\t\t\t\t\t<div class='row'>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6 frame\\\" style=\\\"zoom:0.7;\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"frames/meme-list-item\", options) : helperMissing.call(depth0, \"partial\", \"frames/meme-list-item\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers['code-snippet'] || (depth0 && depth0['code-snippet']),options={hash:{\n      'name': (\"meme-list-item.html\"),\n      'indent': (false),\n      'language': (\"html\")\n    },hashTypes:{'name': \"STRING\",'indent': \"BOOLEAN\",'language': \"STRING\"},hashContexts:{'name': depth0,'indent': depth0,'language': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"code-snippet\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t</div>\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t\");\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n\t\t\t<div class=\\\"panel panel-default\\\">\\n\t\t\t\t<div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Belongs to current user; Liked by current user</h3></div>\\n\t\t\t\t<div class='panel-body'>\\n\t\t\t\t\t<div class='row'>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6 frame\\\" style=\\\"zoom:0.7;\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"frames/meme-list-item-liked\", options) : helperMissing.call(depth0, \"partial\", \"frames/meme-list-item-liked\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers['code-snippet'] || (depth0 && depth0['code-snippet']),options={hash:{\n      'name': (\"meme-list-item-liked.html\"),\n      'indent': (false),\n      'language': (\"html\")\n    },hashTypes:{'name': \"STRING\",'indent': \"BOOLEAN\",'language': \"STRING\"},hashContexts:{'name': depth0,'indent': depth0,'language': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"code-snippet\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t</div>\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t\");\n    return buffer;\n    }\n\n    data.buffer.push(\"<div class=\\\"panel panel-default\\\">\\n\t<div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">meme-list-item Component</h3></div>\\n\t<div class='panel-body'>\\n\t\t\");\n    stack1 = (helper = helpers['element-highlighter'] || (depth0 && depth0['element-highlighter']),options={hash:{\n      'data': (\"highlightData.ownedByAnother\")\n    },hashTypes:{'data': \"ID\"},hashContexts:{'data': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"element-highlighter\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t\");\n    stack1 = (helper = helpers['element-highlighter'] || (depth0 && depth0['element-highlighter']),options={hash:{\n      'data': (\"highlightData.ownedByCurrentUser\")\n    },hashTypes:{'data': \"ID\"},hashContexts:{'data': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"element-highlighter\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t\");\n    stack1 = (helper = helpers['element-highlighter'] || (depth0 && depth0['element-highlighter']),options={hash:{\n      'data': (\"highlightData.ownedByCurrentUser\")\n    },hashTypes:{'data': \"ID\"},hashContexts:{'data': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"element-highlighter\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t</div>\\n</div>\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/spec/memes-route', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n\t<div class=\\\"panel panel-default\\\">\\n\t\t<div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">/memes</h3></div>\\n\t\t<div class='panel-body'>\\n\t\t\t<div class='row'>\\n\t\t\t\t<div class=\\\"col-xs-6 frame\\\" style=\\\"zoom: 0.4\\\">\\n\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"frames/memes\", options) : helperMissing.call(depth0, \"partial\", \"frames/memes\", options))));\n    data.buffer.push(\"\\n\t\t\t\t</div>\\n\t\t\t\t<div class=\\\"col-xs-6\\\">\\n\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers['code-snippet'] || (depth0 && depth0['code-snippet']),options={hash:{\n      'name': (\"memes.html\"),\n      'indent': (false),\n      'language': (\"html\")\n    },hashTypes:{'name': \"STRING\",'indent': \"BOOLEAN\",'language': \"STRING\"},hashContexts:{'name': depth0,'indent': depth0,'language': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"code-snippet\", options))));\n    data.buffer.push(\"\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t</div>\\n\t</div>\\n\");\n    return buffer;\n    }\n\n    stack1 = (helper = helpers['element-highlighter'] || (depth0 && depth0['element-highlighter']),options={hash:{\n      'data': (\"highlightData.memes\")\n    },hashTypes:{'data': \"ID\"},hashContexts:{'data': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"element-highlighter\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    else { data.buffer.push(''); }\n    \n  });\n\n});","define('meme-gen-tutorial/templates/spec/user-filter-toggler', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n\t\t\t<div class=\\\"panel panel-default\\\">\\n\t\t\t\t<div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Not Selected</h3></div>\\n\t\t\t\t<div class='panel-body'>\\n\t\t\t\t\t<div class='row'>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6 frame\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"frames/user-filter-toggler\", options) : helperMissing.call(depth0, \"partial\", \"frames/user-filter-toggler\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers['code-snippet'] || (depth0 && depth0['code-snippet']),options={hash:{\n      'name': (\"user-filter-toggler.html\"),\n      'indent': (false),\n      'language': (\"html\")\n    },hashTypes:{'name': \"STRING\",'indent': \"BOOLEAN\",'language': \"STRING\"},hashContexts:{'name': depth0,'indent': depth0,'language': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"code-snippet\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t</div>\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t\");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n\t\t\t<div class=\\\"panel panel-default\\\">\\n\t\t\t\t<div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Selected</h3></div>\\n\t\t\t\t<div class='panel-body'>\\n\t\t\t\t\t<div class='row'>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6 frame\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"frames/user-filter-toggler-selected\", options) : helperMissing.call(depth0, \"partial\", \"frames/user-filter-toggler-selected\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t\t<div class=\\\"col-xs-6\\\">\\n\t\t\t\t\t\t\t\");\n    data.buffer.push(escapeExpression((helper = helpers['code-snippet'] || (depth0 && depth0['code-snippet']),options={hash:{\n      'name': (\"user-filter-toggler-selected.html\"),\n      'indent': (false),\n      'language': (\"html\")\n    },hashTypes:{'name': \"STRING\",'indent': \"BOOLEAN\",'language': \"STRING\"},hashContexts:{'name': depth0,'indent': depth0,'language': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"code-snippet\", options))));\n    data.buffer.push(\"\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t</div>\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t\");\n    return buffer;\n    }\n\n    data.buffer.push(\"<div class=\\\"panel panel-default\\\">\\n\t<div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">user-filter-toggler Component</h3></div>\\n\t<div class='panel-body'>\\n\t\t\");\n    stack1 = (helper = helpers['element-highlighter'] || (depth0 && depth0['element-highlighter']),options={hash:{\n      'data': (\"highlightData.userFilterToggler\")\n    },hashTypes:{'data': \"ID\"},hashContexts:{'data': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"element-highlighter\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t\");\n    stack1 = (helper = helpers['element-highlighter'] || (depth0 && depth0['element-highlighter']),options={hash:{\n      'data': (\"highlightData.userFilterToggler\")\n    },hashTypes:{'data': \"ID\"},hashContexts:{'data': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"element-highlighter\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t</div>\\n</div>\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/templates/users-filter', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var helper, options;\n    data.buffer.push(escapeExpression((helper = helpers['user-filter-toggler'] || (depth0 && depth0['user-filter-toggler']),options={hash:{\n      'tagName': (\"div\"),\n      'content': (\"user\"),\n      'toggleUser': (\"toggleUser\"),\n      'selected': (\"user.selected\")\n    },hashTypes:{'tagName': \"STRING\",'content': \"ID\",'toggleUser': \"STRING\",'selected': \"ID\"},hashContexts:{'tagName': depth0,'content': depth0,'toggleUser': depth0,'selected': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"user-filter-toggler\", options))));\n    }\n\n    data.buffer.push(\"<div class=\\\"users\\\">\\n\t<div class=\\\"panel panel-default\\\">\\n\t\t<div class=\\\"panel-heading\\\">\\n\t\t\tFilter by Users\\n\t\t</div>\\n\t\t<div class=\\\"panel-body\\\">\\n\t\t\t\");\n    stack1 = helpers.each.call(depth0, \"user\", \"in\", \"usersToFilterBy\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\t\t</div>\\n\t</div>\\n</div>\");\n    return buffer;\n    \n  });\n\n});","define('meme-gen-tutorial/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/components/element-highlighter.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/element-highlighter.js should pass jshint', function() { \n    ok(true, 'components/element-highlighter.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/components/meme-item.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/meme-item.js should pass jshint', function() { \n    ok(true, 'components/meme-item.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/components/meme-list-item.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/meme-list-item.js should pass jshint', function() { \n    ok(true, 'components/meme-list-item.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/components/user-filter-toggler.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/user-filter-toggler.js should pass jshint', function() { \n    ok(true, 'components/user-filter-toggler.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/controllers/meme/edit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/meme');\n  test('controllers/meme/edit.js should pass jshint', function() { \n    ok(true, 'controllers/meme/edit.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/controllers/memes/create.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/memes');\n  test('controllers/memes/create.js should pass jshint', function() { \n    ok(true, 'controllers/memes/create.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/controllers/memes/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/memes');\n  test('controllers/memes/index.js should pass jshint', function() { \n    ok(true, 'controllers/memes/index.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/controllers/spec.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/spec.js should pass jshint', function() { \n    ok(true, 'controllers/spec.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/controllers/spec/create-route.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/spec');\n  test('controllers/spec/create-route.js should pass jshint', function() { \n    ok(true, 'controllers/spec/create-route.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/controllers/spec/edit-route.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/spec');\n  test('controllers/spec/edit-route.js should pass jshint', function() { \n    ok(true, 'controllers/spec/edit-route.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/controllers/spec/meme-item.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/spec');\n  test('controllers/spec/meme-item.js should pass jshint', function() { \n    ok(true, 'controllers/spec/meme-item.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/controllers/spec/meme-list-item.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/spec');\n  test('controllers/spec/meme-list-item.js should pass jshint', function() { \n    ok(true, 'controllers/spec/meme-list-item.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/controllers/spec/memes-route.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/spec');\n  test('controllers/spec/memes-route.js should pass jshint', function() { \n    ok(true, 'controllers/spec/memes-route.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/controllers/spec/user-filter-toggler.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/spec');\n  test('controllers/spec/user-filter-toggler.js should pass jshint', function() { \n    ok(true, 'controllers/spec/user-filter-toggler.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/helpers/resolver', ['exports', 'ember/resolver', 'meme-gen-tutorial/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('meme-gen-tutorial/tests/helpers/start-app', ['exports', 'ember', 'meme-gen-tutorial/app', 'meme-gen-tutorial/router', 'meme-gen-tutorial/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n  exports['default'] = startApp;\n\n});","define('meme-gen-tutorial/tests/initializers/current-user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/current-user.js should pass jshint', function() { \n    ok(true, 'initializers/current-user.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/initializers/meme-route-fixer.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/meme-route-fixer.js should pass jshint', function() { \n    ok(true, 'initializers/meme-route-fixer.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/helpers');\n  test('meme-gen-tutorial/tests/helpers/resolver.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/helpers');\n  test('meme-gen-tutorial/tests/helpers/start-app.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests');\n  test('meme-gen-tutorial/tests/test-helper.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/test-helper.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/adapters/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/adapters');\n  test('meme-gen-tutorial/tests/unit/adapters/application-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/adapters/application-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/components/element-highlighter-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/components');\n  test('meme-gen-tutorial/tests/unit/components/element-highlighter-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/components/element-highlighter-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/components/meme-item-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/components');\n  test('meme-gen-tutorial/tests/unit/components/meme-item-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/components/meme-item-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/components/meme-list-item-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/components');\n  test('meme-gen-tutorial/tests/unit/components/meme-list-item-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/components/meme-list-item-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/components/user-filter-toggler-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/components');\n  test('meme-gen-tutorial/tests/unit/components/user-filter-toggler-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/components/user-filter-toggler-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/meme/edit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/controllers/meme');\n  test('meme-gen-tutorial/tests/unit/controllers/meme/edit-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/controllers/meme/edit-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/memes/create-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/controllers/memes');\n  test('meme-gen-tutorial/tests/unit/controllers/memes/create-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/controllers/memes/create-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/memes/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/controllers/memes');\n  test('meme-gen-tutorial/tests/unit/controllers/memes/index-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/controllers/memes/index-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/controllers');\n  test('meme-gen-tutorial/tests/unit/controllers/spec-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/controllers/spec-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec/create-route-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/controllers/spec');\n  test('meme-gen-tutorial/tests/unit/controllers/spec/create-route-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/controllers/spec/create-route-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec/edit-route-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/controllers/spec');\n  test('meme-gen-tutorial/tests/unit/controllers/spec/edit-route-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/controllers/spec/edit-route-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec/meme-item-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/controllers/spec');\n  test('meme-gen-tutorial/tests/unit/controllers/spec/meme-item-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/controllers/spec/meme-item-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec/meme-list-item-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/controllers/spec');\n  test('meme-gen-tutorial/tests/unit/controllers/spec/meme-list-item-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/controllers/spec/meme-list-item-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec/memes-route-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/controllers/spec');\n  test('meme-gen-tutorial/tests/unit/controllers/spec/memes-route-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/controllers/spec/memes-route-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/controllers/spec/user-filter-toggler-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/controllers/spec');\n  test('meme-gen-tutorial/tests/unit/controllers/spec/user-filter-toggler-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/controllers/spec/user-filter-toggler-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/initializers/current-user-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/initializers');\n  test('meme-gen-tutorial/tests/unit/initializers/current-user-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/initializers/current-user-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/initializers/meme-route-fixer-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/initializers');\n  test('meme-gen-tutorial/tests/unit/initializers/meme-route-fixer-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/initializers/meme-route-fixer-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/mixins/spec-controller-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/mixins');\n  test('meme-gen-tutorial/tests/unit/mixins/spec-controller-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/mixins/spec-controller-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/models/meme-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/models');\n  test('meme-gen-tutorial/tests/unit/models/meme-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/models/meme-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/models/user-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/models');\n  test('meme-gen-tutorial/tests/unit/models/user-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/models/user-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/routes');\n  test('meme-gen-tutorial/tests/unit/routes/index-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/routes/index-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/meme/edit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/routes/meme');\n  test('meme-gen-tutorial/tests/unit/routes/meme/edit-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/routes/meme/edit-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/memes-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/routes');\n  test('meme-gen-tutorial/tests/unit/routes/memes-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/routes/memes-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/memes/create-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/routes/memes');\n  test('meme-gen-tutorial/tests/unit/routes/memes/create-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/routes/memes/create-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/memes/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/routes/memes');\n  test('meme-gen-tutorial/tests/unit/routes/memes/index-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/routes/memes/index-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/routes');\n  test('meme-gen-tutorial/tests/unit/routes/spec-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/routes/spec-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/create-route-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/routes/spec');\n  test('meme-gen-tutorial/tests/unit/routes/spec/create-route-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/routes/spec/create-route-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/edit-route-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/routes/spec');\n  test('meme-gen-tutorial/tests/unit/routes/spec/edit-route-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/routes/spec/edit-route-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/routes/spec');\n  test('meme-gen-tutorial/tests/unit/routes/spec/index-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/routes/spec/index-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/meme-item-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/routes/spec');\n  test('meme-gen-tutorial/tests/unit/routes/spec/meme-item-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/routes/spec/meme-item-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/meme-list-item-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/routes/spec');\n  test('meme-gen-tutorial/tests/unit/routes/spec/meme-list-item-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/routes/spec/meme-list-item-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/memes-route-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/routes/spec');\n  test('meme-gen-tutorial/tests/unit/routes/spec/memes-route-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/routes/spec/memes-route-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/routes/spec/user-filter-toggler-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/routes/spec');\n  test('meme-gen-tutorial/tests/unit/routes/spec/user-filter-toggler-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/routes/spec/user-filter-toggler-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/meme-gen-tutorial/tests/unit/serializers/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - meme-gen-tutorial/tests/unit/serializers');\n  test('meme-gen-tutorial/tests/unit/serializers/application-test.js should pass jshint', function() { \n    ok(true, 'meme-gen-tutorial/tests/unit/serializers/application-test.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/mixins/spec-controller.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/spec-controller.js should pass jshint', function() { \n    ok(true, 'mixins/spec-controller.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/models/meme.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/meme.js should pass jshint', function() { \n    ok(true, 'models/meme.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/models/user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/user.js should pass jshint', function() { \n    ok(true, 'models/user.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/routes/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/index.js should pass jshint', function() { \n    ok(true, 'routes/index.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/routes/meme/edit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/meme');\n  test('routes/meme/edit.js should pass jshint', function() { \n    ok(true, 'routes/meme/edit.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/routes/memes.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/memes.js should pass jshint', function() { \n    ok(true, 'routes/memes.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/routes/memes/create.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/memes');\n  test('routes/memes/create.js should pass jshint', function() { \n    ok(true, 'routes/memes/create.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/routes/memes/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/memes');\n  test('routes/memes/index.js should pass jshint', function() { \n    ok(true, 'routes/memes/index.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/routes/spec.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/spec.js should pass jshint', function() { \n    ok(true, 'routes/spec.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/routes/spec/create-route.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/spec');\n  test('routes/spec/create-route.js should pass jshint', function() { \n    ok(true, 'routes/spec/create-route.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/routes/spec/edit-route.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/spec');\n  test('routes/spec/edit-route.js should pass jshint', function() { \n    ok(true, 'routes/spec/edit-route.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/routes/spec/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/spec');\n  test('routes/spec/index.js should pass jshint', function() { \n    ok(true, 'routes/spec/index.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/routes/spec/meme-item.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/spec');\n  test('routes/spec/meme-item.js should pass jshint', function() { \n    ok(true, 'routes/spec/meme-item.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/routes/spec/meme-list-item.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/spec');\n  test('routes/spec/meme-list-item.js should pass jshint', function() { \n    ok(true, 'routes/spec/meme-list-item.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/routes/spec/memes-route.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/spec');\n  test('routes/spec/memes-route.js should pass jshint', function() { \n    ok(true, 'routes/spec/memes-route.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/routes/spec/user-filter-toggler.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/spec');\n  test('routes/spec/user-filter-toggler.js should pass jshint', function() { \n    ok(true, 'routes/spec/user-filter-toggler.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/serializers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/application.js should pass jshint', function() { \n    ok(true, 'serializers/application.js should pass jshint.'); \n  });\n\n});","define('meme-gen-tutorial/tests/test-helper', ['meme-gen-tutorial/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n\tdocument.write(\"<div id=\\\"ember-testing-container\\\"><div id=\\\"ember-testing\\\"></div></div>\");\n\n\tQUnit.config.urlConfig.push({ id: \"nocontainer\", label: \"Hide container\" });\n\tvar containerVisibility = QUnit.urlParams.nocontainer ? \"hidden\" : \"visible\";\n\tdocument.getElementById(\"ember-testing-container\").style.visibility = containerVisibility;\n\n});","define('meme-gen-tutorial/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"adapter:application\", \"ApplicationAdapter\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var adapter = this.subject();\n    ok(adapter);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('meme-gen-tutorial/tests/unit/components/element-highlighter-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"element-highlighter\", \"ElementHighlighterComponent\", {});\n\n  ember_qunit.test(\"it renders\", function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, \"preRender\");\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, \"inDOM\");\n  });\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('meme-gen-tutorial/tests/unit/components/meme-item-test', ['ember-qunit', 'meme-gen-tutorial/config/environment'], function (ember_qunit, env) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"meme-item\", \"MemeItemComponent\", {\n    // specify the other units that are required for this test\n    needs: [\"component:text-editor\", \"template:components/text-editor\"]\n  });\n\n  ember_qunit.test(\"it renders\", function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject({\n      content: {\n        imgSrc: env['default'].defaultMemeImageSrc,\n        opener: \"Opener\",\n        closer: \"Closer\",\n        openerFontSize: 60,\n        closerFontSize: 60,\n        openerPosition: null,\n        closerPosition: null },\n      editable: false\n    });\n    equal(component._state, \"preRender\");\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, \"inDOM\");\n  });\n\n});","define('meme-gen-tutorial/tests/unit/components/meme-list-item-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"meme-list-item\", \"MemeListItemComponent\", {});\n\n  ember_qunit.test(\"it renders\", function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, \"preRender\");\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, \"inDOM\");\n  });\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('meme-gen-tutorial/tests/unit/components/user-filter-toggler-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"user-filter-toggler\", \"UserFilterTogglerComponent\", {});\n\n  ember_qunit.test(\"it renders\", function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, \"preRender\");\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, \"inDOM\");\n  });\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('meme-gen-tutorial/tests/unit/controllers/meme/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:meme/edit\", \"MemeEditController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/controllers/memes/create-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:memes/create\", \"MemesCreateController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/controllers/memes/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:memes/index\", \"MemesIndexController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/controllers/spec-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:spec\", \"SpecController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/controllers/spec/create-route-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:spec/create-route\", \"SpecCreateRouteController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/controllers/spec/edit-route-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:spec/edit-route\", \"SpecEditRouteController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/controllers/spec/meme-item-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:spec/meme-item\", \"SpecMemeItemController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/controllers/spec/meme-list-item-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:spec/meme-list-item\", \"SpecMemeListItemController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/controllers/spec/memes-route-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:spec/memes-route\", \"SpecMemesRouteController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/controllers/spec/user-filter-toggler-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:spec/user-filter-toggler\", \"SpecUserFilterTogglerController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/initializers/current-user-test', ['ember', 'meme-gen-tutorial/initializers/current-user'], function (Ember, current_user) {\n\n  'use strict';\n\n  var container, application;\n\n  module(\"CurrentUserInitializer\", {\n    setup: function () {\n      Ember['default'].run(function () {\n        application = Ember['default'].Application.create();\n        container = application.__container__;\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  test(\"it works\", function () {\n    current_user.initialize(container, application);\n\n    // you would normally confirm the results of the initializer here\n    ok(true);\n  });\n\n});","define('meme-gen-tutorial/tests/unit/initializers/meme-route-fixer-test', ['ember', 'meme-gen-tutorial/initializers/meme-route-fixer'], function (Ember, meme_route_fixer) {\n\n  'use strict';\n\n  var container, application;\n\n  module(\"MemeRouteFixerInitializer\", {\n    setup: function () {\n      Ember['default'].run(function () {\n        application = Ember['default'].Application.create();\n        container = application.__container__;\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  test(\"it works\", function () {\n    meme_route_fixer.initialize(container, application);\n\n    // you would normally confirm the results of the initializer here\n    ok(true);\n  });\n\n});","define('meme-gen-tutorial/tests/unit/mixins/spec-controller-test', ['ember', 'meme-gen-tutorial/mixins/spec-controller'], function (Ember, SpecControllerMixin) {\n\n  'use strict';\n\n  module(\"SpecControllerMixin\");\n\n  // Replace this with your real tests.\n  test(\"it works\", function () {\n    var SpecControllerObject = Ember['default'].Object.extend(SpecControllerMixin['default']);\n    var subject = SpecControllerObject.create();\n    ok(subject);\n  });\n\n});","define('meme-gen-tutorial/tests/unit/models/meme-test', ['ember-qunit', 'meme-gen-tutorial/models/user'], function (ember_qunit, User) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"meme\", \"Meme\", {\n    // Specify the other units that are required for this test.\n    needs: [\"model:user\"]\n  });\n\n  ember_qunit.test(\"it exists\", function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('meme-gen-tutorial/tests/unit/models/user-test', ['ember-qunit', 'meme-gen-tutorial/models/meme'], function (ember_qunit, Meme) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"user\", \"User\", {\n    // Specify the other units that are required for this test.\n    needs: [\"model:meme\"]\n  });\n\n  ember_qunit.test(\"it exists\", function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('meme-gen-tutorial/tests/unit/routes/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:index\", \"IndexRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/routes/meme/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:meme/edit\", \"MemeEditRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/routes/memes-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:memes\", \"MemesRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/routes/memes/create-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:memes/create\", \"MemesCreateRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/routes/memes/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:memes/index\", \"MemesIndexRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/routes/spec-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:spec\", \"SpecRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/routes/spec/create-route-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:spec/create-route\", \"SpecCreateRouteRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/routes/spec/edit-route-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:spec/edit-route\", \"SpecEditRouteRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/routes/spec/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:spec/index\", \"SpecIndexRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/routes/spec/meme-item-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:spec/meme-item\", \"SpecMemeItemRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/routes/spec/meme-list-item-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:spec/meme-list-item\", \"SpecMemeListItemRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/routes/spec/memes-route-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:spec/memes-route\", \"SpecMemesRouteRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/routes/spec/user-filter-toggler-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:spec/user-filter-toggler\", \"SpecUserFilterTogglerRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('meme-gen-tutorial/tests/unit/serializers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"serializer:application\", \"ApplicationSerializer\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var serializer = this.subject();\n    ok(serializer);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","/* jshint ignore:start */\n\ndefine('meme-gen-tutorial/config/environment', ['ember'], function(Ember) {\n  var prefix = 'meme-gen-tutorial';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"meme-gen-tutorial/tests/test-helper\");\n} else {\n  require(\"meme-gen-tutorial/app\")[\"default\"].create({});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"meme-gen-tutorial.js"}